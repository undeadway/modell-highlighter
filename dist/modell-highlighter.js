/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/jsconst/index.js":
/*!***************************************!*\
  !*** ./node_modules/jsconst/index.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var __dirname = \"/\";\nconst root = {};\n\n__webpack_require__(/*! ./lib/init */ \"./node_modules/jsconst/lib/init.js\");\n\nif (typeof(window) !== 'undefined') {\n\tif (window.JsConst) return;\n\n\ttry {\n\t\tfunction putObject(parent, names) {\n\t\t\tlet name = names.shift();\n\n\t\t\tif (!name) return;\n\n\t\t\tif (!parent[name]) {\n\t\t\t\tlet object = parent[name] = {};\n\t\t\t\tputObject(object, names);\n\t\t\t}\n\t\t};\n\n\t\tfunction getObject (parent, names) {\n\t\t\tlet name = names.shift();\n\t\t\tif (!name) {\n\t\t\t\treturn parent;\n\t\t\t} else {\n\t\t\t\tif (!parent[name]) { // 这里是为了防止 put 的时候没有 put 进去造成的错误\n\t\t\t\t\tparent[name] = {};\n\t\t\t\t}\n\t\t\t\treturn getObject(parent[name], names);\n\t\t\t}\n\t\t}\n\n\t\tfunction read (now, parent) {\n\n\t\t\tconst path = `${parent}/${now}/`;\n\n\t\t\tconst _lib = __webpack_require__(\"./node_modules/jsconst/modules sync recursive ^\\\\.\\\\/.*$\");\n\t\t\t_lib.keys().forEach(key => {\n\n\t\t\t\tlet path = key.slice(2);\n\n\t\t\t\t/*\n\t\t\t\t* 输出有四种模式：\n\t\t\t\t* 文件夹\n\t\t\t\t* 文件夹名/\n\t\t\t\t* 文件夹/文件名\n\t\t\t\t* 文件夹/文件名.js\n\t\t\t\t* \n\t\t\t\t* 因为 文件夹名/ 和  文件夹/文件名.js 具有可判断性，所以保留，其余不做处理\n\t\t\t\t*/\n\t\t\t\tif (path.indexOf(\".js\") === path.length - 3) {\n\t\t\t\t\tlet names = path.slice(0,  path.length - 3).split(\"/\");\n\t\t\t\t\tlet fileName = names.pop();\n\t\t\t\t\tlet obj = getObject(root, names);\n\t\t\t\t\tif (fileName === \"index\") {\n\t\t\t\t\t\tobj = Object.assign(obj, _lib(key));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobj[fileName] = _lib(key);\n\t\t\t\t\t}\n\t\t\t\t} else if (path.indexOf(\"/\") === path.length - 1) {\n\t\t\t\t\tlet names = path.slice(0,  path.length - 1).split(\"/\");\n\n\t\t\t\t\tputObject(root, names);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tread(\"modules\", \".\");\n\n\t\twindow.JsConst = root;\n\t} catch (e) {\n\t\tconsole.log(e);\n\t}\n} else {\n\tif (__webpack_require__.g.JsConst) return;\n\n\ttry {\n\t\tconst fs = __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'fs'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n\n\t\tfunction read (modules, parent, object) {\n\t\t\tmodules.map(module => {\n\t\t\t\tlet path = `${parent}/${module}`;\n\t\t\t\tlet stat = fs.statSync(path);\n\t\t\t\tlet name = module.split(\".\")[0];\n\n\t\t\t\tif (stat.isFile()) {\n\t\t\t\t\tif (module === \"index.js\") return;\n\t\t\t\t\tobject[name] = __webpack_require__(\"./node_modules/jsconst sync recursive\")(path);\n\t\t\t\t} else if (stat.isDirectory()) {\n\t\t\t\t\tlet index = `${path}/index.js`;\n\t\t\t\t\tlet sub = object[name] = fs.existsSync(index) ?  __webpack_require__(\"./node_modules/jsconst sync recursive\")(index) : {};\n\t\t\t\t\tread(fs.readdirSync(path), path, sub);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tread(fs.readdirSync(__dirname + \"/modules\"), __dirname + \"/modules\", root);\n\n\t\t__webpack_require__.g.JsConst = root;\n\t} catch {\n\t\t\n\t}\n}\n\n\n//# sourceURL=webpack://modell-highlighter/./node_modules/jsconst/index.js?");

/***/ }),

/***/ "./node_modules/jsconst/lib/init.js":
/*!******************************************!*\
  !*** ./node_modules/jsconst/lib/init.js ***!
  \******************************************/
/***/ (() => {

eval("\n// String\nif (!String.BINARY) {\n\tObject.defineProperty(String, \"BINARY\", {\n\t\tget: () => {\n\t\t\treturn \"binary\";\n\t\t}\n\t});\n\tObject.defineProperty(String, \"BLANK\", {\n\t\tget: () => {\n\t\t\treturn \"\";\n\t\t}\n\t});\n}\n\n\n// 数组\nif (!Array.TYPE_NAME) {\n\tObject.defineProperty(Array, \"TYPE_NAME\", {\n\t\tget: () => {\n\t\t\treturn \"array\";\n\t\t}\n\t});\n}\n// Boolean\nif (!Boolean.TYPE_NAME) {\n\tObject.defineProperty(Boolean, \"TYPE_NAME\", {\n\t\tget: () => {\n\t\t\treturn \"boolean\";\n\t\t}\n\t});\n}\n// 错误\nif (!Error.TYPE_NAME) {\n\tObject.defineProperty(Error, \"TYPE_NAME\", {\n\t\tget: () => {\n\t\t\treturn \"error\";\n\t\t}\n\t});\n}\n// 函数\nif (!Function.TYPE_NAME) {\n\tObject.defineProperty(Function, \"TYPE_NAME\", {\n\t\tget: () => {\n\t\t\treturn \"function\";\n\t\t}\n\t});\n}\n// 字符串\nif (!String.TYPE_NAME) {\n\tObject.defineProperty(String, \"TYPE_NAME\", {\n\t\tget: () => {\n\t\t\treturn \"string\";\n\t\t}\n\t});\n}\n// 正则表达式\nif (!RegExp.TYPE_NAME) {\n\tObject.defineProperty(RegExp, \"TYPE_NAME\", {\n\t\tget: () => {\n\t\t\treturn \"regexp\";\n\t\t}\n\t});\n}\n// 日期\nif (!Date.TYPE_NAME) {\n\tObject.defineProperty(Date, \"TYPE_NAME\", {\n\t\tget: () => {\n\t\t\treturn \"date\";\n\t\t}\n\t});\n}\n// 数字\nif (!Number.TYPE_NAME) {\n\tObject.defineProperty(Number, \"TYPE_NAME\", {\n\t\tget: () => {\n\t\t\treturn \"number\";\n\t\t}\n\t});\n}\n// 数字 - NaN\nif (!Number.NaN_TYPE_NAME) {\n\tObject.defineProperty(Number, \"NaN_TYPE_NAME\", {\n\t\tget: () => {\n\t\t\treturn \"NaN\";\n\t\t}\n\t});\n}\n// 数字 无限大\nif (!Number.Infinity_TYPE_NAME) {\n\tObject.defineProperty(Number, \"Infinity_TYPE_NAME\", {\n\t\tget: () => {\n\t\t\treturn \"Infinity\";\n\t\t}\n\t});\n}\n// Object\nif (!Object.TYPE_NAME) {\n\tObject.defineProperty(Object, \"TYPE_NAME\", {\n\t\tget: () => {\n\t\t\treturn \"object\";\n\t\t}\n\t});\n}\n\n//  ES6 新增\nif (Set && !Array.TYPE_NAME) {\n\tObject.defineProperty(Set, \"TYPE_NAME\", {\n\t\tget: () => {\n\t\t\treturn \"set\";\n\t\t}\n\t});\n}\nif (WeakSet && !WeakSet.TYPE_NAME) {\n\tObject.defineProperty( WeakSet, \"TYPE_NAME\", {\n\t\tget: () => {\n\t\t\treturn \"weakset\";\n\t\t}\n\t});\n}\nif (Map && !Map.TYPE_NAME) {\n\tObject.defineProperty(Map, \"TYPE_NAME\", {\n\t\tget: () => {\n\t\t\treturn \"set\";\n\t\t}\n\t});\n}\nif (WeakMap && !WeakMap.TYPE_NAME) {\n\tObject.defineProperty( WeakMap, \"TYPE_NAME\", {\n\t\tget: () => {\n\t\t\treturn \"weakset\";\n\t\t}\n\t});\n}\nif (Symbol && !Symbol.TYPE_NAME) {\n\tObject.defineProperty(Symbol, \"TYPE_NAME\", {\n\t\tget: () => {\n\t\t\treturn \"symbol\";\n\t\t}\n\t});\n}\n\n//# sourceURL=webpack://modell-highlighter/./node_modules/jsconst/lib/init.js?");

/***/ }),

/***/ "./node_modules/jsconst/modules/CharCode/Lower.js":
/*!********************************************************!*\
  !*** ./node_modules/jsconst/modules/CharCode/Lower.js ***!
  \********************************************************/
/***/ ((module) => {

eval("module.exports = { // 小写字母字母的 ASCII 编号\n    A: 0x0061,\n    Z: 0x007A,\n    F: 0x0066\n};\n\n//# sourceURL=webpack://modell-highlighter/./node_modules/jsconst/modules/CharCode/Lower.js?");

/***/ }),

/***/ "./node_modules/jsconst/modules/CharCode/Upper.js":
/*!********************************************************!*\
  !*** ./node_modules/jsconst/modules/CharCode/Upper.js ***!
  \********************************************************/
/***/ ((module) => {

eval("module.exports = { // 大写字母字母的 ASCII 编号\n    A: 0x0041,\n    Z: 0x005A,\n    F: 0x0046\n};\n\n//# sourceURL=webpack://modell-highlighter/./node_modules/jsconst/modules/CharCode/Upper.js?");

/***/ }),

/***/ "./node_modules/jsconst/modules/CharCode/index.js":
/*!********************************************************!*\
  !*** ./node_modules/jsconst/modules/CharCode/index.js ***!
  \********************************************************/
/***/ ((module) => {

eval("module.exports = {\n    ZERO: 0x0030,\n\tNINE: 0x0039,\n\t// 特殊符号的 ASCII 编号\n\tUNDERBAR: 0x005F, // _\n\tDOLLAR: 0x0024, // $,;\n}\n\n//# sourceURL=webpack://modell-highlighter/./node_modules/jsconst/modules/CharCode/index.js?");

/***/ }),

/***/ "./node_modules/jsconst/modules/Char/Angle.js":
/*!****************************************************!*\
  !*** ./node_modules/jsconst/modules/Char/Angle.js ***!
  \****************************************************/
/***/ ((module) => {

eval("module.exports = {\n    LEFT: \"<\",\n\tRIGHT: \">\"\n}\n\n//# sourceURL=webpack://modell-highlighter/./node_modules/jsconst/modules/Char/Angle.js?");

/***/ }),

/***/ "./node_modules/jsconst/modules/Char/Brakcket.js":
/*!*******************************************************!*\
  !*** ./node_modules/jsconst/modules/Char/Brakcket.js ***!
  \*******************************************************/
/***/ ((module) => {

eval("module.exports = {\n\tLEFT: \"{\",\n\tRIGHT: \"}\",\n}\n\n//# sourceURL=webpack://modell-highlighter/./node_modules/jsconst/modules/Char/Brakcket.js?");

/***/ }),

/***/ "./node_modules/jsconst/modules/Char/Parenthe.js":
/*!*******************************************************!*\
  !*** ./node_modules/jsconst/modules/Char/Parenthe.js ***!
  \*******************************************************/
/***/ ((module) => {

eval("module.exports = {\n\tLEFT: \"(\",\n\tRIGHT: \")\",\n}\n\n//# sourceURL=webpack://modell-highlighter/./node_modules/jsconst/modules/Char/Parenthe.js?");

/***/ }),

/***/ "./node_modules/jsconst/modules/Char/Space.js":
/*!****************************************************!*\
  !*** ./node_modules/jsconst/modules/Char/Space.js ***!
  \****************************************************/
/***/ ((module) => {

eval("module.exports = {\n    REGX: /\\s/, // 标准空白\n    SPACE: \" \", // 标准空白\n\tTAB: \"\\t\",\n    LF: \"\\n\",\n    CR: \"\\r\"\n}\n\n//# sourceURL=webpack://modell-highlighter/./node_modules/jsconst/modules/Char/Space.js?");

/***/ }),

/***/ "./node_modules/jsconst/modules/Char/SquareBracket.js":
/*!************************************************************!*\
  !*** ./node_modules/jsconst/modules/Char/SquareBracket.js ***!
  \************************************************************/
/***/ ((module) => {

eval("module.exports = {\n\tLEFT: \"[\",\n\tRIGHT: \"]\",\n};\n\n//# sourceURL=webpack://modell-highlighter/./node_modules/jsconst/modules/Char/SquareBracket.js?");

/***/ }),

/***/ "./node_modules/jsconst/modules/Char/index.js":
/*!****************************************************!*\
  !*** ./node_modules/jsconst/modules/Char/index.js ***!
  \****************************************************/
/***/ ((module) => {

eval("module.exports = {\n    ZERO_WIDTH: \"\\uFEFF\",\n\tQUESTION: \"?\",\n\tDQUOTE: \"\\\"\",\n\tQUOTE: \"'\",\n\tGRAVE_ACCENT: \"`\",\n\tUNDER_SOURCE: \"_\",\n\tBSLASH: \"\\\\\",\n\tSLASH: \"/\",\n\tASTERISK: \"*\",\n\tAT: \"@\",\n\tAND: \"&\",\n\tSHARP: \"#\",\n\tCOMMA: \",\",\n\tSEMICOLON: \";\",\n\tCOLON: \":\",\n\t// Bracket.LEFT: \"{\",\n\t// Bracket.RIGHT: \"}\",\n\t// LEFT_SQUARE_BRACKET: \"[\",\n\t// RIGHT_SQUARE_BRACKET: \"]\",\n\t// LEFT_PARENTHE: \"(\",\n\t// RIGHT_PARENTHE: \")\",\n\tPOINT: \".\",\n\tHYPHEN: \"-\",\n\tEQUALS: \"=\",\n\tTILDE: \"~\",\n\tEXCALMATORY: \"!\",\n    NEW_LINE_REGX: /(\\r\\n|\\r|\\n)/\n\t// LEFT_ANGLE: \"<\",\n\t// RIGHT_ANGLE: \">\"\n};\n\n//# sourceURL=webpack://modell-highlighter/./node_modules/jsconst/modules/Char/index.js?");

/***/ }),

/***/ "./node_modules/jsconst/modules/Encoding.js":
/*!**************************************************!*\
  !*** ./node_modules/jsconst/modules/Encoding.js ***!
  \**************************************************/
/***/ ((module) => {

eval("module.exports = {\n    UTF8: \"utf-8\",\n    ACSII: \"acsii\",\n    Unicode: \"unicode\",\n    GBK: \"GBK\",\n    BASE64: \"base64\"\n}\n\n//# sourceURL=webpack://modell-highlighter/./node_modules/jsconst/modules/Encoding.js?");

/***/ }),

/***/ "./node_modules/jsconst/modules/HtmlTag.js":
/*!*************************************************!*\
  !*** ./node_modules/jsconst/modules/HtmlTag.js ***!
  \*************************************************/
/***/ ((module) => {

eval("module.exports = {\n    A: \"a\",\n    ABBR: \"abbr\",\n    ACRONYM: \"acronym\",\n    ADDRESS: \"address\",\n    APPLET: \"applet\",\n    AREA: \"area\",\n    ARTICLE: \"article\",\n    ASIDE: \"aside\",\n    AUDIO: \"audio\",\n    B: \"b\",\n    BASE: \"base\",\n    BASEFONT: \"basefont\",\n    BDI: \"bdi\",\n    BDO: \"bdo\",\n    BIG: \"big\",\n    BLOCKQUOTE: \"blockquote\",\n    BODY: \"body\",\n    BR: \"br\",\n    BUTTON: \"button\",\n    CANVAS: \"canvas\",\n    CAPTION: \"caption\",\n    CENTER: \"center\",\n    CITE: \"cite\",\n    CODE: \"code\",\n    COL: \"col\",\n    COLGROUP: \"colgroup\",\n    COMMAND: \"command\",\n    DATALIST: \"datalist\",\n    DD: \"dd\",\n    DEL: \"del\",\n    DETAILS: \"details\",\n    DFN: \"dfn\",\n    DIALOG: \"dialog\",\n    DIR: \"dir\",\n    DIV: \"div\",\n    DL: \"dl\",\n    DT: \"dt\",\n    EM: \"em\",\n    EMBED: \"embed\",\n    FIELDSET: \"fieldset\",\n    FIGCAPTION: \"figcaption\",\n    FIGURE: \"figure\",\n    FONT: \"font\",\n    FOOTER: \"footer\",\n    FORM: \"form\",\n    FRAME: \"frame\",\n    FRAMESET: \"frameset\",\n    H1: \"h1\",\n    H2: \"h2\",\n    H3: \"h3\",\n    H4: \"h4\",\n    H5: \"h5\",\n    H6: \"h6\",\n    HEAD: \"head\",\n    HEADER: \"header\",\n    HR: \"hr\",\n    HTML: \"html\",\n    I: \"i\",\n    IFRAME: \"iframe\",\n    IMG: \"img\",\n    INPUT: \"input\",\n    INS: \"ins\",\n    KBD: \"kbd\",\n    KEYGEN: \"keygen\",\n    LABEL: \"label\",\n    LEGEND: \"legend\",\n    LI: \"li\",\n    LINK: \"link\",\n    MAP: \"map\",\n    MARK: \"mark\",\n    MENU: \"menu\",\n    META: \"meta\",\n    METER: \"meter\",\n    NAV: \"nav\",\n    NOFRAMES: \"noframes\",\n    NOSCRIPT: \"noscript\",\n    OBJECT: \"object\",\n    OL: \"ol\",\n    OPTGROUP: \"optgroup\",\n    OPTION: \"option\",\n    OUTPUT: \"output\",\n    P: \"p\",\n    PARAM: \"param\",\n    PRE: \"pre\",\n    PROGRESS: \"progress\",\n    Q: \"q\",\n    RP: \"rp\",\n    RT: \"rt\",\n    RUBY: \"ruby\",\n    S: \"s\",\n    SAMP: \"samp\",\n    SCRIPT: \"script\",\n    SECTION: \"section\",\n    SELECT: \"select\",\n    SMALL: \"small\",\n    SOURCE: \"source\",\n    SPAN: \"span\",\n    STRIKE: \"strike\",\n    STRONG: \"strong\",\n    STYLE: \"style\",\n    SUB: \"sub\",\n    SUMMARY: \"summary\",\n    SUP: \"sup\",\n    TABLE: \"table\",\n    TBODY: \"tbody\",\n    TD: \"td\",\n    TEXTAREA: \"textarea\",\n    TFOOT: \"tfoot\",\n    TH: \"th\",\n    THEAD: \"thead\",\n    TIME: \"time\",\n    TITLE: \"title\",\n    TR: \"tr\",\n    TRACK: \"track\",\n    TT: \"tt\",\n    U: \"u\",\n    UL: \"ul\",\n    VAR: \"var\",\n    VIDEO: \"video\",\n    WBR: \"wbr\"\n};\n\n//# sourceURL=webpack://modell-highlighter/./node_modules/jsconst/modules/HtmlTag.js?");

/***/ }),

/***/ "./node_modules/jsconst/modules/HtmlTagAttribute/input.js":
/*!****************************************************************!*\
  !*** ./node_modules/jsconst/modules/HtmlTagAttribute/input.js ***!
  \****************************************************************/
/***/ ((module) => {

eval("module.exports = {\n    BUTTON: \"button\",\n    CHECKBOX: \"checkbox\",\n    COLOR: \"color\",\n    DATE: \"date\",\n    DATETIME_LOCAL: \"datetime-local\",\n    EMAIL: \"email\",\n    FILE: \"file\",\n    HIDDEN: \"hidden\",\n    IMAGE: \"image\",\n    MONTH: \"month\",\n    NUMBER: \"number\",\n    PASSWORD: \"password\",\n    RADIO: \"radio\",\n    RANGE: \"range\",\n    RESET: \"reset\",\n    SEARCH: \"search\",\n    SUBMIT: \"submit\",\n    TEL: \"tel\",\n    TEXT: \"text\",\n    TIME: \"time\",\n    URL: \"url\",\n    WEEK: \"week\",\n};\n\n//# sourceURL=webpack://modell-highlighter/./node_modules/jsconst/modules/HtmlTagAttribute/input.js?");

/***/ }),

/***/ "./node_modules/jsconst/modules/HttpRequestMethod.js":
/*!***********************************************************!*\
  !*** ./node_modules/jsconst/modules/HttpRequestMethod.js ***!
  \***********************************************************/
/***/ ((module) => {

eval("module.exports = {\n    GET: \"GET\",\n    PUT: \"PUT\",\n    POST: \"POST\",\n    DELETE: \"DELETE\",\n    CONNECT: \"CONNECT\",\n    HEAD: \"HEAD\",\n    OPTIONS: \"OPTIONS\",\n    TRACE: \"TRACE\",\n    PATCH: \"PATCH\",\n    WEBSOCKT: \"WS\"\n};\n\n//# sourceURL=webpack://modell-highlighter/./node_modules/jsconst/modules/HttpRequestMethod.js?");

/***/ }),

/***/ "./node_modules/jsconst/modules/HttpStatusCode.js":
/*!********************************************************!*\
  !*** ./node_modules/jsconst/modules/HttpStatusCode.js ***!
  \********************************************************/
/***/ ((module) => {

eval("module.exports = {\n    CONTINUE: 100,\n    SWITCHING_PROTOCOLS: 101,\n    PROCESSING: 102,\n    OK: 200,\n    CREATED: 201,\n    ACCEPTED: 202,\n    NON_AUTHORITATIVE_INFORMATION: 203,\n    NO_CONTENT: 204,\n    RESET_CONTENT: 205,\n    PARTIAL_CONTENT: 206,\n    MULTI_STATUS: 207,\n    ALREADY_REPORTED: 208,\n    IM_USED: 226,\n    MULTIPLE_CHOICES: 300,\n    MOVED_PERMANENTLY: 301,\n    FOUND: 302,\n    SEE_OTHER: 303,\n    NOT_MODIFIED: 304,\n    USE_PROXY: 305,\n    TEMPORARY_REDIRECT: 307,\n    PERMANENT_REDIRECT: 308,\n    BAD_REQUEST: 400,\n    UNAUTHORIZED: 401,\n    PAYMENT_REQUIRED: 402,\n    FORBIDDEN: 403,\n    NOT_FOUND: 404,\n    METHOD_NOT_ALLOWED: 405,\n    NOT_ACCEPTABLE: 406,\n    PROXY_AUTHENTICATION_REQUIRED: 407,\n    REQUEST_TIMEOUT: 408,\n    CONFLICT: 409,\n    GONE: 410,\n    LENGTH_REQUIRED: 411,\n    PRECONDITION_FAILED: 412,\n    PAYLOAD_TOO_LARGE: 413,\n    URI_TOO_LONG: 414,\n    UNSUPPORTED_MEDIA_TYPE: 415,\n    RANGE_NOT_SATISFIABLE: 416,\n    EXPECTATION_FAILED: 417,\n    I_AM_A_TEAPOT: 418,\n    MISDIRECTED_REQUEST: 421,\n    UNPROCESSABLE_ENTITY: 422,\n    LOCKED: 423,\n    FAILED_DEPENDENCY: 424,\n    UNORDERED_COLLECTION: 425,\n    UPGRADE_REQUIRED: 426,\n    PRECONDITION_REQUIRED: 428,\n    TOO_MANY_REQUESTS: 429,\n    REQUEST_HEADER_FIELDS_TOO_LARGE: 431,\n    UNAVAILABLE_FOR_LEGAL_REASONS: 451,\n    INTERNAL_SERVER_ERROR: 500,\n    NOT_IMPLEMENTED: 501,\n    BAD_GATEWAY: 502,\n    SERVICE_UNAVAILABLE: 503,\n    GATEWAY_TIMEOUT: 504,\n    HTTP_VERSION_NOT_SUPPORTED: 505,\n    VARIANT_ALSO_NEGOTIATES: 506,\n    INSUFFICIENT_STORAGE: 507,\n    LOOP_DETECTED: 508,\n    BANDWIDTH_LIMIT_EXCEEDED: 509,\n    NOT_EXTENDED: 510,\n    NETWORK_AUTHENTICATION_REQUIRED: 511\n};\n\n//# sourceURL=webpack://modell-highlighter/./node_modules/jsconst/modules/HttpStatusCode.js?");

/***/ }),

/***/ "./node_modules/jsconst/modules/MimeType.js":
/*!**************************************************!*\
  !*** ./node_modules/jsconst/modules/MimeType.js ***!
  \**************************************************/
/***/ ((module) => {

eval("module.exports = {\n\t// application\n\tJSON: \"application/json\",\n\tPDF: \"application/pdf\",\n\tJAVASCRIPT: \"application/javascript\",\n\tOCTET_STREAM: \"application/octet-stream\",\n\tDTD: \"application/xml-dtd\",\n\tZIP: \"application/zip\",\n\t// text\n\tTEXT: \"text/plain\",\n\tHTML: \"text/html\",\n\tXML: \"text/xml\",\n\tCSS: \"text/css\",\n\tCSV: \"text/csv\",\n\t// image\n\tGIF: \"image/gif\",\n\tPNG: \"image/png\",\n\tJPG: \"image/jpeg\",\n\tBMP: \"image/bmp\",\n\tWEBP: \"image/webp\",\n\tICON: \"image/x-icon\",\n\tSVG: \"image/svg+xml\"\n}\n\n//# sourceURL=webpack://modell-highlighter/./node_modules/jsconst/modules/MimeType.js?");

/***/ }),

/***/ "./node_modules/jsconst/modules/RegxType.js":
/*!**************************************************!*\
  !*** ./node_modules/jsconst/modules/RegxType.js ***!
  \**************************************************/
/***/ ((module) => {

eval("module.exports = {\n    GLOBAL: \"g\",\n    IGNORE_CASE: \"i\",\n    FORCE: \"f\",\n    MUTLI_LINE: \"m\"\n};\n\n//# sourceURL=webpack://modell-highlighter/./node_modules/jsconst/modules/RegxType.js?");

/***/ }),

/***/ "./node_modules/jsconst/modules/XmlEntity.js":
/*!***************************************************!*\
  !*** ./node_modules/jsconst/modules/XmlEntity.js ***!
  \***************************************************/
/***/ ((module) => {

eval("module.exports = {\n    LEFT_ANGLE: \"&lt;\", // <\n    RIGHT_ANGLE: \"&gt;\",  // >\n    AMP: \"&amp;\", // &\n    QUOT: \"&quot;\", // \"\n    APOS: \"&apos;\", // '\n    SHARP: \"&#35;\", // #\n    SPACE: \"&nbsp;\"\n}\n\n//# sourceURL=webpack://modell-highlighter/./node_modules/jsconst/modules/XmlEntity.js?");

/***/ }),

/***/ "./node_modules/jsconst/modules sync recursive ^\\.\\/.*$":
/*!*****************************************************!*\
  !*** ./node_modules/jsconst/modules/ sync ^\.\/.*$ ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var map = {\n\t\"./Char\": \"./node_modules/jsconst/modules/Char/index.js\",\n\t\"./Char/\": \"./node_modules/jsconst/modules/Char/index.js\",\n\t\"./Char/Angle\": \"./node_modules/jsconst/modules/Char/Angle.js\",\n\t\"./Char/Angle.js\": \"./node_modules/jsconst/modules/Char/Angle.js\",\n\t\"./Char/Brakcket\": \"./node_modules/jsconst/modules/Char/Brakcket.js\",\n\t\"./Char/Brakcket.js\": \"./node_modules/jsconst/modules/Char/Brakcket.js\",\n\t\"./Char/Parenthe\": \"./node_modules/jsconst/modules/Char/Parenthe.js\",\n\t\"./Char/Parenthe.js\": \"./node_modules/jsconst/modules/Char/Parenthe.js\",\n\t\"./Char/Space\": \"./node_modules/jsconst/modules/Char/Space.js\",\n\t\"./Char/Space.js\": \"./node_modules/jsconst/modules/Char/Space.js\",\n\t\"./Char/SquareBracket\": \"./node_modules/jsconst/modules/Char/SquareBracket.js\",\n\t\"./Char/SquareBracket.js\": \"./node_modules/jsconst/modules/Char/SquareBracket.js\",\n\t\"./Char/index\": \"./node_modules/jsconst/modules/Char/index.js\",\n\t\"./Char/index.js\": \"./node_modules/jsconst/modules/Char/index.js\",\n\t\"./CharCode\": \"./node_modules/jsconst/modules/CharCode/index.js\",\n\t\"./CharCode/\": \"./node_modules/jsconst/modules/CharCode/index.js\",\n\t\"./CharCode/Lower\": \"./node_modules/jsconst/modules/CharCode/Lower.js\",\n\t\"./CharCode/Lower.js\": \"./node_modules/jsconst/modules/CharCode/Lower.js\",\n\t\"./CharCode/Upper\": \"./node_modules/jsconst/modules/CharCode/Upper.js\",\n\t\"./CharCode/Upper.js\": \"./node_modules/jsconst/modules/CharCode/Upper.js\",\n\t\"./CharCode/index\": \"./node_modules/jsconst/modules/CharCode/index.js\",\n\t\"./CharCode/index.js\": \"./node_modules/jsconst/modules/CharCode/index.js\",\n\t\"./Encoding\": \"./node_modules/jsconst/modules/Encoding.js\",\n\t\"./Encoding.js\": \"./node_modules/jsconst/modules/Encoding.js\",\n\t\"./HtmlTag\": \"./node_modules/jsconst/modules/HtmlTag.js\",\n\t\"./HtmlTag.js\": \"./node_modules/jsconst/modules/HtmlTag.js\",\n\t\"./HtmlTagAttribute/input\": \"./node_modules/jsconst/modules/HtmlTagAttribute/input.js\",\n\t\"./HtmlTagAttribute/input.js\": \"./node_modules/jsconst/modules/HtmlTagAttribute/input.js\",\n\t\"./HttpRequestMethod\": \"./node_modules/jsconst/modules/HttpRequestMethod.js\",\n\t\"./HttpRequestMethod.js\": \"./node_modules/jsconst/modules/HttpRequestMethod.js\",\n\t\"./HttpStatusCode\": \"./node_modules/jsconst/modules/HttpStatusCode.js\",\n\t\"./HttpStatusCode.js\": \"./node_modules/jsconst/modules/HttpStatusCode.js\",\n\t\"./MimeType\": \"./node_modules/jsconst/modules/MimeType.js\",\n\t\"./MimeType.js\": \"./node_modules/jsconst/modules/MimeType.js\",\n\t\"./RegxType\": \"./node_modules/jsconst/modules/RegxType.js\",\n\t\"./RegxType.js\": \"./node_modules/jsconst/modules/RegxType.js\",\n\t\"./XmlEntity\": \"./node_modules/jsconst/modules/XmlEntity.js\",\n\t\"./XmlEntity.js\": \"./node_modules/jsconst/modules/XmlEntity.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/jsconst/modules sync recursive ^\\\\.\\\\/.*$\";\n\n//# sourceURL=webpack://modell-highlighter/./node_modules/jsconst/modules/_sync_^\\.\\/.*$?");

/***/ }),

/***/ "./node_modules/jsconst sync recursive":
/*!************************************!*\
  !*** ./node_modules/jsconst/ sync ***!
  \************************************/
/***/ ((module) => {

eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/jsconst sync recursive\";\nmodule.exports = webpackEmptyContext;\n\n//# sourceURL=webpack://modell-highlighter/./node_modules/jsconst/_sync?");

/***/ }),

/***/ "./src/common.js":
/*!***********************!*\
  !*** ./src/common.js ***!
  \***********************/
/***/ ((module, exports, __webpack_require__) => {

eval("\r\nconst { Char, CharCode } = JsConst;\r\nconst { Span, Common, CLike } = __webpack_require__(/*! ./constants */ \"./src/constants.js\");\r\nconst { doHtmlEscape, defaultDoChars, doComment4CLike, defaultJudgePluginExe, judgeComment4CLike,\r\n\t\tdefaultIsBuiltIn, defaultDoKeyword, defaultDoNumber, defaultDoBuiltIn, append } = __webpack_require__(/*! ./components */ \"./src/components.js\");\r\n\r\nconst LANGUAGES = {};\r\n\r\nconst langMap = {\r\n\tJAVA: \"Java\",\r\n\tJAVASCRIPT: \"JavaScript\",\r\n\tVBSCRIPT: \"VBScript\",\r\n};\r\n\r\nfunction commonDoRegExp(code, index, len, at, output) {\r\n\tlet word = [at],\r\n\t\tbefore = at,\r\n\t\thasRegex = false;\r\n\tlet start = index;\r\n\tfor (start += 1; start < len; start++) {\r\n\t\tat = code.charAt(start);\r\n\t\tif (at === Char.Space.LF) {\r\n\t\t\tbreak;\r\n\t\t} else if (at === Char.SLASH && before !== CLike.ESCAPER) {\r\n\t\t\thasRegex = true;\r\n\t\t} else if (hasRegex && !(at === \"i\" || at === \"g\" || at === \"m\")) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tdoHtmlEscape(at, word);\r\n\t\tbefore = at;\r\n\t}\r\n\tif (hasRegex) {\r\n\t\tappend(output, Span.REGEXP + word.join(String.BLANK) + Span.CLOSE);\r\n\t\tstart--;\r\n\t\tindex = start;\r\n\t}\r\n\treturn index;\r\n}\r\n\r\nfunction commonDoComment(code, index, len, at, output) {\r\n\tlet next = code.charAt(index + 1);\r\n\tlet method = (next === Char.SLASH || next === Char.ASTERISK) ? doComment4CLike : commonDoRegExp;\r\n\treturn method(code, index, len, at, output);\r\n}\r\n\r\nfunction commonExecute(code) {\r\n\tlet kw = this.getKeywords(),\r\n\t\tplugIn = this.getPlugIn(),\r\n\t\tescaper = CLike.ESCAPER,\r\n\t\toperatorRegx = CLike.OPERATOR_REGX,\r\n\t\tjudgeExe = defaultJudgePluginExe,\r\n\t\tplugInExe = null,\r\n\t\thasPlugIn = !!plugIn,\r\n\t\t// 插件的判断函数\r\n\t\tdoComment = doComment4CLike,\r\n\t\tjudgeComment = judgeComment4CLike,\r\n\t\tisBuiltInFunc = defaultIsBuiltIn,\r\n\t\tisBuiltInVar = defaultIsBuiltIn,\r\n\t\t// 插件的执行函数\r\n\t\tdoKeyword = defaultDoKeyword,\r\n\t\tdoChar = defaultDoChars,\r\n\t\tdoNumber = defaultDoNumber,\r\n\t\tdoBuiltIn = defaultDoBuiltIn,\r\n\t\t// 插件替代量的默认值\r\n\t\tcharCaseMethod = null,\r\n\t\tcharSpan = Span.CHAR,\r\n\t\tdoc = false;\r\n\r\n\tlet word = String.BLANK, output = [];\r\n\r\n\t// 插件和可替换（继承）处理的预处理\r\n\tif (hasPlugIn) {\r\n\t\tif (plugIn.charSpan) {\r\n\t\t\tcharSpan = plugIn.charSpan;\r\n\t\t}\r\n\t\tif (plugIn.escaper) {\r\n\t\t\tescaper = plugIn.escaper;\r\n\t\t}\r\n\t\tif (plugIn.doComment) {\r\n\t\t\tdoComment = plugIn.doComment;\r\n\t\t}\r\n\t\tif (plugIn.charCaseMethod) {\r\n\t\t\tcharCaseMethod = plugIn.charCaseMethod;\r\n\t\t}\r\n\t\tif (plugIn.judgeComment) {\r\n\t\t\tjudgeComment = plugIn.judgeComment;\r\n\t\t}\r\n\t\tif (plugIn.judgeExe) {\r\n\t\t\tjudgeExe = plugIn.judgeExe;\r\n\t\t\tif (plugIn.execute) {\r\n\t\t\t\tplugInExe = plugIn.execute;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (plugIn.doChar) {\r\n\t\t\tdoChar = plugIn.doChar;\r\n\t\t}\r\n\t\tif (plugIn.doNumber) {\r\n\t\t\tdoNumber = plugIn.doNumber;\r\n\t\t}\r\n\t\tif (plugIn.doKeyword) {\r\n\t\t\tdoKeyword = plugIn.doKeyword;\r\n\t\t}\r\n\t\tif (plugIn.doBuiltIn) {\r\n\t\t\tdoBuiltIn = plugIn.doBuiltIn;\r\n\t\t}\r\n\t\tif (plugIn.isBuiltInFunc) {\r\n\t\t\tisBuiltInFunc = plugIn.isBuiltInFunc;\r\n\t\t}\r\n\t\tif (plugIn.isBuiltInVar) {\r\n\t\t\tisBuiltInVar = plugIn.isBuiltInVar;\r\n\t\t}\r\n\t\tif (plugIn.operatorRegx) {\r\n\t\t\toperatorRegx = plugIn.operatorRegx;\r\n\t\t}\r\n\t\tdoc = plugIn.doc;\r\n\t}\r\n\r\n\tfor (let index = 0, len = code.length; index < len; index++) {\r\n\r\n\t\tlet at = code.charAt(index),\r\n\t\t\tcodeAt = code.charCodeAt(index);\r\n\r\n\t\tif (codeAt === 8203) continue; // 零宽空白\r\n\r\n\t\tif (Char.Space.REGX.test(at)) { // 标准空白\r\n\t\t\tappend(output, word);\r\n\t\t\tdoHtmlEscape(at, output);\r\n\t\t\tword = String.BLANK;\r\n\t\t} else if (hasPlugIn && judgeExe(at)) { // 每个语言的自定义插件\r\n\t\t\tindex = plugInExe(code, index, len, output);\r\n\t\t} else if (judgeComment(at)) { // 注释\r\n\t\t\tappend(output, word);\r\n\t\t\tindex = doComment(code, index, len, at, output, doc);\r\n\t\t\tword = String.BLANK;\r\n\t\t} else if (at === Char.DQUOTE) {\r\n\t\t\tappend(output, word);\r\n\t\t\t// 双引号，一般来说双引号都都是字符串，所以这里直接写死\r\n\t\t\t// 以后要是遇到了 双引号不是字符串的，再做修改\r\n\t\t\tindex = defaultDoChars(code, index, len, output, escaper, at, Span.STRING);\r\n\t\t\tword = String.BLANK;\r\n\t\t} else if (at === Char.QUOTE) {\r\n\t\t\tappend(output, word);\r\n\t\t\t// 单引号，默认判断为字符，具体实现由各语言自定义的 doChar 方法来实现\r\n\t\t\t// 即，如果将 doChar 自定义为 doChars ，那单引号也可以被当作字符串来处理\r\n\t\t\tindex = doChar(code, index, len, output, escaper, at, charSpan);\r\n\t\t\tword = String.BLANK;\r\n\t\t} else {\r\n\t\t\tif (CharCode.ZERO <= codeAt && codeAt <= CharCode.NINE) { // 数字\r\n\t\t\t\tappend(output, word);\r\n\t\t\t\tword = String.BLANK;\r\n\t\t\t\tindex = doNumber(code, index, len, output);\r\n\t\t\t} else {\r\n\t\t\t\tif (Common.BRACEKT_REGX.test(at)) { // 合法的括号（不含尖括号）\r\n\t\t\t\t\tappend(output, `${word}${Span.BRACKET}${at}${Span.CLOSE}`);\r\n\t\t\t\t\tword = String.BLANK;\r\n\t\t\t\t} else if (at === Char.Angle.LEFT) { // 左尖括号\r\n\t\t\t\t\tappend(output, word);\r\n\t\t\t\t\tdoHtmlEscape(at, output);\r\n\t\t\t\t\tword = String.BLANK;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tword += at;\r\n\t\t\t\t\tlet next = code.charCodeAt(index + 1);\r\n\t\t\t\t\tif (operatorRegx.test(word)) { // 类C语言的操作符\r\n\t\t\t\t\t\tappend(output, word);\r\n\t\t\t\t\t\tword = String.BLANK;\r\n\t\t\t\t\t} else if (doKeyword(kw, word, next, charCaseMethod)) { // 关键字\r\n\t\t\t\t\t\tappend(output, `${Span.KEYWORD}${word}${Span.CLOSE}`);\r\n\t\t\t\t\t\tword = String.BLANK;\r\n\t\t\t\t\t} else if (doBuiltIn(word, next, code.charAt(index + 1), output, isBuiltInFunc, isBuiltInVar)) { // 语言内置函数、变量等\r\n\t\t\t\t\t\tword = String.BLANK;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tappend(output, word);\r\n\r\n\treturn output.join(String.BLANK);\r\n}\r\n\r\nfunction initLangObject(execute, plugIn, keywords) {\r\n\r\n\treturn {\r\n\t\tgetKeywords: function () {\r\n\t\t\treturn keywords;\r\n\t\t},\r\n\t\tgetPlugIn: function () {\r\n\t\t\treturn plugIn;\r\n\t\t},\r\n\t\texecute: execute || commonExecute\r\n\t};\r\n}\r\n\r\nlet pesudocode = (function () {\r\n\tlet dftBuiltInFunc = [\"eval\", \"alert\", \"print\"];\r\n\r\n\treturn initLangObject(commonExecute, {\r\n\t\tdoComment: commonDoComment,\r\n\t\tisBuiltInFunc: function (word) {\r\n\t\t\treturn Array.has(dftBuiltInFunc, word);\r\n\t\t},\r\n\t}, [\"abstract\", \"assert\",\r\n\t\t\"boolean\", \"break\", \"byte\",\r\n\t\t\"case\", \"catch\", \"class\", \"char\", \"const\", \"continue\",\r\n\t\t\"default\", \"delete \", \"do\", \"double\",\r\n\t\t\"else\", \"eval\", \"echo\", \"enum\", \"export\", \"extends\",\r\n\t\t\"false\", \"final\", \"finally\", \"float\", \"for\", \"foreach\", \"function\",\r\n\t\t\"goto\",\r\n\t\t\"if\", \"implements\", \"import\", \"in\", \"instanceof\", \"int\", \"interface\",\r\n\t\t\"long\",\r\n\t\t\"new\", \"null\", \"namespace\",\r\n\t\t\"package\", \"private\", \"protected\", \"public\",\r\n\t\t\"return\",\r\n\t\t\"short\", \"static\", \"string\", \"struct\", \"super\", \"switch\",\r\n\t\t\"this\", \"throw\", \"throws\", \"true\", \"try\",\r\n\t\t\"var\",\r\n\t\t\"while\",\r\n\t\t\"void\"\r\n\t]);\r\n})();\r\n\r\nexports = module.exports = {\r\n\tdoRegExp: commonDoRegExp,\r\n\tdoComment: commonDoComment,\r\n\texecute: commonExecute,\r\n\tinitLangObject: initLangObject,\r\n\tgetLang: (langName) => {\r\n\t\treturn LANGUAGES[langName] || pesudocode;\r\n\t},\r\n\taddLang: function (langs, execute, plugIn, ...keywords) {\r\n\r\n\t\tif (typeIs(keywords[0], \"array\")) {\r\n\t\t\tkeywords = keywords[0];\r\n\t\t}\r\n\t\tlet langObj = initLangObject(execute, plugIn, keywords);\r\n\r\n\t\tfor (let lang of langs) {\r\n\t\t\tLANGUAGES[lang.name] = langObj;\r\n\t\t\tif (lang.rename) {\r\n\t\t\t\tlangMap[lang.rename] = lang.name;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tgetLanguagesName: () => {\r\n\t\tlet result = Object.keys(LANGUAGES).map(function (lang) {\r\n\t\t\treturn langMap[lang] || lang;\r\n\t\t});\r\n\t\treturn result.sort();\r\n\t}\r\n};\n\n//# sourceURL=webpack://modell-highlighter/./src/common.js?");

/***/ }),

/***/ "./src/components.js":
/*!***************************!*\
  !*** ./src/components.js ***!
  \***************************/
/***/ ((module, exports, __webpack_require__) => {

eval("const { Char, CharCode, XmlEntity } = JsConst;\r\nconst { Span, Common, CLike, JOIN } = __webpack_require__(/*! ./constants */ \"./src/constants.js\");\r\n\r\nconst IS_HEX_NUMBER_REGX = /^0x[a-f0-9]+$/i;\r\nconst IS_DECIMAL_REGX = /^[0-9]\\.[0-9](d|f)*$/i;\r\nconst IS_INTEGER_REGX = /^[0-9](l)*/i;\r\nconst CAN_IN_NUMBER_REGX = /([0-9a-f]|l|\\.|x|\\-)/i;\r\n\r\nfunction doHtmlEscape(at, output) {\r\n\tif (String.isEmpty(at) || at === Char.ZERO_WIDTH) return;\r\n\r\n\tswitch (at) {\r\n\t\tcase Char.Space.LF:\r\n\t\t\tappend(output, JOIN);\r\n\t\t\tbreak;\r\n\t\tcase Char.Angle.LEFT:\r\n\t\t\tappend(output, XmlEntity.LEFT_ANGLE);\r\n\t\t\tbreak;\r\n\t\tcase Char.Angle.RIGHT:\r\n\t\t\tappend(output, XmlEntity.RIGHT_ANGLE);\r\n\t\t\tbreak;\r\n\t\tcase Char.SHARP:\r\n\t\t\tappend(output, XmlEntity.SHARP);\r\n\t\t\tbreak;\r\n\t\tcase Char.AND:\r\n\t\t\tappend(output, XmlEntity.AMP);\r\n\t\t\tbreak;\r\n\t\tcase Char.DQUOTE:\r\n\t\t\tappend(output, XmlEntity.QUOT);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tappend(output, at);\r\n\t}\r\n}\r\n\r\nfunction canInNumber(at) {\r\n\treturn CAN_IN_NUMBER_REGX.test(at);\r\n}\r\n\r\nfunction isNumber(str) {\r\n\r\n\treturn IS_HEX_NUMBER_REGX.test(str) || // 16 进制数\r\n\t\tIS_DECIMAL_REGX.test(str) || // 小数\r\n\t\tIS_INTEGER_REGX.test(str); // 整数\r\n}\r\n\r\nfunction doNewLineJoin(output, startSpan) {\r\n\tappend(output, Span.CLOSE);\r\n\tappend(output, JOIN);\r\n\tif (startSpan) {\r\n\t\tappend(output, startSpan);\r\n\t}\r\n}\r\n\r\n/**\r\n * 判断该字符是否可以作为一个词的组成部分\r\n * 词的范围包括：\r\n * 变量名、函数名、关键字\r\n */\r\nfunction canInWord(at) {\r\n\t// [A-Z]\r\n\treturn (CharCode.Upper.A <= at && at <= CharCode.Upper.Z) ||\r\n\t\t// [a-z]\r\n\t\t(CharCode.Lower.A <= at && at <= CharCode.Lower.Z) ||\r\n\t\t// [0-9]\r\n\t\t(CharCode.ZERO <= at && at <= CharCode.NINE) ||\r\n\t\t// [_ $]\r\n\t\tCharCode.UNDERBAR === at || CharCode.DOLLAR === at;\r\n}\r\n\r\n/*\r\n * 判断给出的字符串是否是一个合法的词\r\n */\r\nfunction isWord(str) {\r\n\r\n\tfor (i = 0, len = str.length; i < len; i++) {\r\n\t\tif (!canInWord(str.charCodeAt(i))) return false;\r\n\t}\r\n\r\n\tif (Common.NUMBER_REGX.test(str)) return false; // 数字开头\r\n\r\n\treturn true;\r\n}\r\n\r\n/**\r\n * 处理字符或字符串\r\n * <p>\r\n * 某些语言字符可以包含多个字符，所以这里和字符串一起进行处理。\r\n * 输出形式具体是字符还是字符串全权交给每个语言自定义实现\r\n * </p>\r\n * \r\n * @param code       处理的目标字符串\r\n * @param index      处理的起始位置\r\n * @param len        字符串长度\r\n * @param output     输出对象（数组）\r\n * @param escaper    转义字符\r\n * @param end        结束标识符\r\n * @param charSpan   字符 span 标签，用于区分字符和字符串\r\n */\r\nfunction defaultDoChars(code, index, len, output, escaper, end, charSpan) {\r\n\tappend(output, charSpan);\r\n\tlet before = escaper;\r\n\tfor (; index < len; index++) {\r\n\t\tlet at = code.charAt(index);\r\n\t\tif (at === Char.Space.LF) {\r\n\t\t\tdoNewLineJoin(output, charSpan);\r\n\t\t} else {\r\n\t\t\tdoHtmlEscape(at, output);\r\n\t\t\t// 转义字符的转义\r\n\t\t\tif (at === escaper && before === escaper) {\r\n\t\t\t\tbefore = null;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (at === end && before !== escaper) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tbefore = at;\r\n\t}\r\n\tappend(output, Span.CLOSE);\r\n\treturn index;\r\n}\r\n\r\nfunction defaultDoCharCase(word, charCaseMethod) {\r\n\tlet outWord = word;\r\n\tif (charCaseMethod) {\r\n\t\tswitch (typeOf(charCaseMethod)) {\r\n\t\t\tcase \"string\":\r\n\t\t\t\toutWord = word[charCaseMethod]();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"function\": // TODO 这里为什么写 “,” 自己也忘了，但从上文的判断是 typeOf 来看，应该是写错了\r\n\t\t\t\t\t\t\t // 感觉应该是 function ，先这么改了\r\n\t\t\t\toutWord = charCaseMethod(word);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tError.unsupportedType(charCaseMethod);\r\n\t\t}\r\n\t}\r\n\treturn outWord;\r\n}\r\n/**\r\n * 处理关键字\r\n *\r\n * @param kws            每种语言的关键字集\r\n * @param word           请求判断的语言\r\n * @param next           下一个字符\r\n * @param charCaseMethod 大小写标签，因为有些语言不区分大小写，而关键字大小写是固定的\r\n *                       所以这里加入这个函数对被请求的词进行大小写处理\r\n *                       这个函数可以是自定义函数，也可以是 JS 既存的字符串处理函数\r\n * \r\n */\r\nfunction defaultDoKeyword(kws, word, next, charCaseMethod) {\r\n\treturn Array.has(kws, defaultDoCharCase(word, charCaseMethod)) && !canInWord(next);\r\n}\r\n/**\r\n * 处理内置函数\r\n * @param word            请求判断的内容\r\n * @param nextCode        下一个字符的编码\r\n * @param next            下一个字符\r\n * @param output          输出\r\n * @param isBuiltInFunc   判断是否是内置函数\r\n * @param isBuiltInVar    判断是否是内置变量 \r\n * @returns \r\n */\r\nfunction defaultDoBuiltIn(word, nextCode, next, output, isBuiltInFunc, isBuiltInVar) {\r\n\r\n\tif (canInWord(nextCode)) return false; // 紧接着的字符可以入词则返回\r\n\r\n\tlet builtInFuncFlg = isBuiltInFunc(word, next),\r\n\t\tbuiltInVarFlg = isBuiltInVar(word, next);\r\n\tlet result = (builtInFuncFlg || builtInVarFlg);\r\n\r\n\tif (result) {\r\n\t\tif (builtInFuncFlg) {\r\n\t\t\tappend(output, Span.BUILTIN_FUNC + word + Span.CLOSE);\r\n\t\t}\r\n\t\tif (builtInVarFlg) {\r\n\t\t\tappend(output, Span.BUILTIN_VAR + word + Span.CLOSE);\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nfunction defaultIsBuiltIn() {\r\n\treturn false;\r\n}\r\n\r\nfunction defaultDoNumber(code, index, len, output) {\r\n\r\n\tlet at = code.charAt(index);\r\n\tif (canInWord(code.charCodeAt(index - 1))) {\r\n\t\tappend(output, at);\r\n\t\treturn index;\r\n\t}\r\n\tlet word = \"\";\r\n\tfor (; index < len; index++) {\r\n\t\tat = code.charAt(index);\r\n\t\tif (at === \"x\" || at === \"X\") {\r\n\t\t}\r\n\t\tif (canInNumber(at)) {\r\n\t\t\tif (at === Char.HYPHEN && canInNumber(code.charAt(index - 1))) break;\r\n\t\t\tword += at;\r\n\t\t} else {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tif (isNumber(word)) {\r\n\t\tappend(output, Span.NUMBER + word + Span.CLOSE);\r\n\t} else {\r\n\t\tappend(output, word);\r\n\t}\r\n\r\n\treturn --index;\r\n}\r\n\r\nfunction doLineComment4CLike(code, index, len, at, output) {\r\n\tappend(output, Span.COMMENT);\r\n\tfor (; index < len; index++) {\r\n\t\tat = code.charAt(index);\r\n\t\tif (at === Char.Space.LF) {\r\n\t\t\tdoNewLineJoin(output);\r\n\t\t\tbreak;\r\n\t\t} else {\r\n\t\t\tdoHtmlEscape(at, output);\r\n\t\t}\r\n\t}\r\n\r\n\treturn index;\r\n}\r\n\r\nfunction doBlockComment4CLike(code, index, len, output, hasDoc) {\r\n\thasDoc = hasDoc && code.charAt(index + 2) === Char.ASTERISK;\r\n\tappend(output, hasDoc ? Span.DOC : Span.COMMENT);\r\n\tfor (; index < len; index++) {\r\n\t\tlet at = code.charAt(index);\r\n\t\tif (at !== Char.ASTERISK || code.charAt(index + 1) !== Char.SLASH) {\r\n\t\t\tif (at === Char.Space.LF) {\r\n\t\t\t\tdoNewLineJoin(output, hasDoc ? Span.DOC : Span.COMMENT);\r\n\t\t\t} else {\r\n\t\t\t\tdoHtmlEscape(at, output);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tappend(output, CLike.BLOCK_COMMENT_END);\r\n\tappend(output, Span.CLOSE);\r\n\t// append(output, JOIN);\r\n\treturn ++index;\r\n}\r\n\r\nfunction judgeComment4CLike(at) {\r\n\treturn at === Char.SLASH;\r\n}\r\n\r\nfunction doComment4CLike(code, index, len, at, output, doc) {\r\n\tlet next = (index < len - 1) ? code.charAt(index + 1) : String.BLNAK;\r\n\tif (judgeComment4CLike(next)) {\r\n\t\tindex = doLineComment4CLike(code, index, len, at, output);\r\n\t} else if (next === Char.ASTERISK) {\r\n\t\tindex = doBlockComment4CLike(code, index, len, output, doc);\r\n\t}\r\n\treturn index;\r\n}\r\n\r\n\r\nfunction defaultJudgePluginExe() {\r\n\treturn false;\r\n}\r\n\r\nfunction append(output, str) {\r\n\tif (String.isEmpty(str)) return;\r\n\r\n\toutput.push(str);\r\n}\r\n\r\nexports = module.exports = {\r\n\tappend,\r\n\tdoHtmlEscape,\r\n\tcanInNumber,\r\n\tisNumber,\r\n\tdoNewLineJoin,\r\n\tcanInWord,\r\n\tisWord,\r\n\tdefaultDoChars,\r\n\tdefaultDoCharCase,\r\n\tdefaultDoKeyword,\r\n\tdefaultDoBuiltIn,\r\n\tdefaultIsBuiltIn,\r\n\tdefaultDoNumber,\r\n\tdoLineComment4CLike,\r\n\tdoBlockComment4CLike,\r\n\tjudgeComment4CLike,\r\n\tdoComment4CLike,\r\n\tdefaultJudgePluginExe\r\n}\n\n//# sourceURL=webpack://modell-highlighter/./src/components.js?");

/***/ }),

/***/ "./src/constants.js":
/*!**************************!*\
  !*** ./src/constants.js ***!
  \**************************/
/***/ ((module, exports) => {

eval("/**\r\n * ModellHighLighter 用到的所有常量\r\n */\r\n\r\nexports = module.exports = {\r\n\tJOIN: \"</li><li>\",\r\n\t// 各种标签\r\n\tSpan: {\r\n\t\t// 共通标签\r\n\t\tCLOSE: \"</span>\",\r\n\t\tCOMMENT: \"<span class=\\\"comment\\\">\",\r\n\t\tSTRING: \"<span class=\\\"string\\\">\",\r\n\t\tNUMBER: \"<span class=\\\"number\\\">\",\r\n\t\tFILETYPE: \"<span class=\\\"filetype\\\">\",\r\n\t\t// 常用标签\r\n\t\tCHAR: \"<span class=\\\"character\\\">\",\r\n\t\tKEYWORD: \"<span class=\\\"keyword\\\">\",\r\n\t\tREGEXP: \"<span class=\\\"regexp\\\">\",\r\n\t\tDOC: \"<span class=\\\"doc\\\">\",\r\n\t\tDESCRIPTION: \"<span class=\\\"description\\\">\",\r\n\t\tDEFINE: \"<span class=\\\"define\\\">\",\r\n\t\t// 内置的各种内容\r\n\t\tBUILTIN_FUNC: \"<span class=\\\"builtin_func\\\">\",\r\n\t\tBUILTIN_VAR: \"<span class=\\\"builtin_var\\\">\",\r\n\t\t// 各种符号\r\n\t\tBRACKET: \"<span class=\\\"bracket\\\">\",\r\n\t\tOPERATOR: \"<span class=\\\"operator\\\">\",\r\n\t\tXMLTAG: \"<span class=\\\"xmltag\\\">\",\r\n\t\t// 键值对标签（XML属性、CSS 等可用）\r\n\t\tDATA_KEY: \"<span class=\\\"data_key\\\">\",\r\n\t\tDATA_VAL: \"<span class=\\\"data_val\\\">\"\r\n\t},\r\n\tCommon: {\r\n\t\tNUMBER_REGX: /^[0-9]/,\r\n\t\tBRACEKT_REGX: /(\\{|\\}|\\[|\\]|\\(|\\)|<|>)/, // 默认括号，使用 C 语言的括号（类 C 语言都可使用）\r\n\t},\r\n\tCLike: {\r\n\t\tLINE_COMMENT: \"//\",\r\n\t\tESCAPER: \"\\\\\",\r\n\t\t//默认操作符（单字符，不计“->”这种多字符操作符），使用 C 语言的操作符（类 C 语言都可使用 ）\r\n\t\tOPERATOR_REGX: /(\\:|\\+|\\-|\\*|\\/|\\%|\\&|\\||\\^|\\!|\\~|\\?|:|,|;|\\.)/,\r\n\t\tBLOCK_COMMENT_END: \"*/\"\r\n\t}\r\n}\n\n//# sourceURL=webpack://modell-highlighter/./src/constants.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __dirname = \"/\";\n__webpack_require__(/*! jsconst */ \"./node_modules/jsconst/index.js\");\r\n\r\nexports = module.exports = {};\r\n\r\nconst { Char } = JsConst;\r\nconst { getLang, getLanguagesName } = __webpack_require__(/*! ./common */ \"./src/common.js\");\r\n\r\n// 载入所有包\r\nif (Coralian.side()) {\r\n\tconst langs = __webpack_require__(\"./src/langs sync recursive ^\\\\.\\\\/.*$\");\r\n\tlangs.keys().forEach(key => {\r\n\t\tlangs(key);\r\n\t});\r\n} else {\r\n\ttry { // 这里加 try ... catch 只是为了避免 webpack 打包时，前端找不到 fs 模块而报错的问题\r\n\t\tconst fs = __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'fs'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\r\n\t\tconst langs = fs.readdirSync(`${__dirname}/langs`);\r\n\t\tlangs.map((file) => {\r\n\t\t\t__webpack_require__(\"./src/langs sync recursive ^\\\\.\\\\/.*$\")(`./${file}`);\r\n\t\t});\r\n\t}catch {\r\n\t}\r\n}\r\n\r\nconst NEW_LINE_REGX = /(\\r\\n|\\r|\\n)/ig;\r\nconst FILED_START = '<fieldset class=\"modell-highlighter\"><legend>',\r\n\tFILED_LIST = '</legend><pre><ol class=\"code_list\"><li>',\r\n\tFILED_END = '</li></ol></pre></fieldset>',\r\n\tCODE_START_TAG = \"<code>\",\r\n\tCODE_END_TAG = \"</code>\";\r\n\r\nconst langMap = {\r\n\tJAVA: 'Java',\r\n\tJAVASCRIPT: 'JavaScript',\r\n\tVBSCRIPT: 'VBScript',\r\n\tSHELL: 'Shell'\r\n};\r\n\r\nfunction getFullName(lang) {\r\n\tswitch (lang) {\r\n\t\tcase 'JS':\r\n\t\t\tlang = 'JAVASCRIPT';\r\n\t\t\tbreak;\r\n\t\tcase 'VBS':\r\n\t\t\tlang = 'VBSCRIPT';\r\n\t\tcase 'CS':\r\n\t\t\tlang = 'C#';\r\n\t\tcase 'SH':\r\n\t\t\tlang = 'SHELL';\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n\treturn lang;\r\n}\r\n\r\nfunction getLangName(lang) {\r\n\tif (lang) {\r\n\t\treturn (langMap[lang] || lang) + ' 代码';\r\n\t} else {\r\n\t\treturn '伪代码';\r\n\t}\r\n}\r\n\r\nfunction parseLang(lang, input) {\r\n\r\n\tlet language = getLang(lang);\r\n\treturn language.execute(input.replace(NEW_LINE_REGX, Char.Space.LF));\r\n}\r\n\r\nconst ModellHighLighter = {\r\n\tconstants: __webpack_require__(/*! ./constants */ \"./src/constants.js\"),\r\n\tcomponents: __webpack_require__(/*! ./components */ \"./src/components.js\"),\r\n\texecute: (input, lang) => {\r\n\r\n\t\tinput = String.trim(input);\r\n\t\tif (!input) return String.BLANK;\r\n\r\n\t\tif (!String.contains(input, NEW_LINE_REGX) && !lang) {\r\n\t\t\tlet output = [CODE_START_TAG];\r\n\t\t\tfor (let i = 0, len = input.length; i < len; i++) {\r\n\t\t\t\tcomponents.doHtmlEscape(input.charAt(i), output);\r\n\t\t\t}\r\n\t\t\toutput.push(CODE_END_TAG);\r\n\t\t\treturn output.join(String.BLANK);\r\n\t\t}\r\n\r\n\t\tlang = String.trim(getFullName(lang.toUpperCase()));\r\n\r\n\t\treturn FILED_START + getLangName(lang) + FILED_LIST + parseLang(lang, input) + FILED_END;\r\n\t},\r\n\tgetLangs: getLanguagesName\r\n};\r\n\r\nCoralian.setToGlobal(\"ModellHighLighter\", ModellHighLighter);\r\n\n\n//# sourceURL=webpack://modell-highlighter/./src/index.js?");

/***/ }),

/***/ "./src/langs/c_cpp.js":
/*!****************************!*\
  !*** ./src/langs/c_cpp.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\r\n * C、C++\r\n */\r\nconst { XmlEntity, Char } = JsConst;\r\nconst { Span } = __webpack_require__(/*! ./../constants */ \"./src/constants.js\");\r\nconst { doHtmlEscape, append } = __webpack_require__(/*! ./../components */ \"./src/components.js\");\r\nconst { addLang } = __webpack_require__(/*! ./../common */ \"./src/common.js\");\r\n\r\nconst dftBuiltInFunc = [\"printf\", \"malloc\", \"free\"];\r\n\r\nfunction doMacroDefine(code, index, len, output) {\r\n\r\n\tlet before = null;\r\n\r\n\tfor (index; index < len; index++) {\r\n\t\tlet at = code.charAt(index);\r\n\t\tif (at === Char.Space.LF || (Char.Space.REGX.test(at) && before !== Char.SHARP) || at === Char.Angle.LEFT || at === Char.DQUOTE) {\r\n\t\t\tappend(output, Span.CLOSE);\r\n\t\t\tdoHtmlEscape(at, output);\r\n\t\t\treturn index;\r\n\t\t}\r\n\r\n\t\tdoHtmlEscape(at, output);\r\n\t\tbefore = at;\r\n\t}\r\n}\r\n\r\nconst plugIn = {\r\n\tjudgeExe: function (at) {\r\n\t\treturn at === Char.SHARP;\r\n\t},\r\n\tisBuiltInFunc: function (word) {\r\n\t\treturn Array.has(dftBuiltInFunc, word);\r\n\t},\r\n\texecute: function (code, index, len, output) {\r\n\t\tlet at = code.charAt(index);\r\n\t\tswitch (at) {\r\n\t\t\tcase Char.SHARP:\r\n\t\t\t\tappend(output, Span.DEFINE);\r\n\t\t\t\tappend(output, XmlEntity.SHARP);\r\n\t\t\t\treturn doMacroDefine(code, ++index, len, output);\r\n\t\t\tdefault:\r\n\t\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n}\r\n\r\naddLang([{ name: \"C\" }], null, plugIn, [\"auto\", \"_bool\", \"break\", \"case\", \"char\", \"const\", \"continue\",\r\n\t\"do\", \"default\", \"double\", \"else\", \"enum\", \"extern\", \"float\", \"for\", \"goto\", \"if\", \"int\", \"long\",\r\n\t\"register\", \"return\", \"typedef\", \"signed\", \"sizeof\", \"short\", \"static\", \"struct\", \"switch\", \"union\",\r\n\t\"unsigned\", \"void\", \"volatile\", \"while\"\r\n]);\r\n\r\n// C++暂时只在关键字上区别C语言\r\naddLang([{ name: \"C++\" }], null, plugIn, [\"asm\", \"auto\", \"bool\", \"break\", \"case\", \"catch\", \"char\", \"class\",\r\n\t\"const\", \"const_cast\", \"continue\", \"default\", \"delete\", \"do\", \"double\", \"dynamic_cast\", \"else\", \"enum\",\r\n\t\"explicit\", \"export\", \"extern\", \"false\", \"float\", \"for\", \"friend\", \"goto\", \"if\", \"inline\", \"int\", \"long\",\r\n\t\"mutable\", \"namespace\", \"new\", \"operator\", \"private\", \"protected\", \"public\", \"register\", \"reinterpret_cast\",\r\n\t\"return\", \"short\", \"signed\", \"sizeof\", \"static\", \"static_cast\", \"struct\", \"switch\", \"template\", \"this\",\r\n\t\"throw\", \"true\", \"try\", \"typedef\", \"typeid\", \"typename\", \"union\", \"unsigned\", \"using\", \"virtual\", \"void\",\r\n\t\"volatile\", \"wchar_t\", \"while\"\r\n]);\n\n//# sourceURL=webpack://modell-highlighter/./src/langs/c_cpp.js?");

/***/ }),

/***/ "./src/langs/cs.js":
/*!*************************!*\
  !*** ./src/langs/cs.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\r\n * C#\r\n */\r\nconst { Char } = JsConst;\r\nconst { Span, CLike } = __webpack_require__(/*! ./../constants */ \"./src/constants.js\");\r\nconst { addLang } = __webpack_require__(/*! ./../common */ \"./src/common.js\");\r\nconst { append } = __webpack_require__(/*! ./../components */ \"./src/components.js\");\r\n\r\nconst dftBuiltInVar = [\"System\", \"IO\", \"Windows\", \"Forms\", \"List\"];\r\nconst JUGDE_PLUGIN_KW = [Char.LEFT_SQUARE_BRACKET, Char.SHARP];\r\n\r\nfunction doDescription(code, index, len, output) {\r\n\r\n\tFOR_ATTRIBUTE: for (let i = index - 1; i >= 0; i--) {\r\n\t\tlet at = code.charAt(i);\r\n\t\tif (!Char.Space.REGX.test(at)) {\r\n\t\t\t/*\r\n\t\t\t * 1. 左花括号 ： } [Description]\r\n\t\t\t * 2. 右花括号 ： { [Description]\r\n\t\t\t * 3. 注释 ： \r\n\t\t\t *    1) 块注释 /× ×/ [Description]\r\n\t\t\t *    2) 行注释 //(/) Comment \r\n\t\t\t *\t\t\t\t    [Description]\r\n\t\t\t * 其他 Description 的形式未总结，或者只要是空白，就可以写 \r\n\t\t\t */\r\n\t\t\tif (at === Char.LEFT_BRACE || at === Char.RIGHT_BRACE) { // 左右花括号\r\n\t\t\t\tindex += 1;\r\n\t\t\t\tbreak FOR_ATTRIBUTE;\r\n\t\t\t} else if (i > 0 && at === Char.SLASH) { // 注释\r\n\t\t\t\tlet before = code.charAt(i - 1);\r\n\t\t\t\tif (before === Char.ASTERISK) { // 块注释\r\n\t\t\t\t\tindex += 1;\r\n\t\t\t\t\tbreak FOR_ATTRIBUTE;\r\n\t\t\t\t} else if (before === Char.SLASH) {\r\n\t\t\t\t\tfor (let j = i - 2; j >= 0; j--) {\r\n\t\t\t\t\t\tlet at2 = code.charAt(j);\r\n\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t * 因为存在 “// aaa // bbb” 这种形式的注释\r\n\t\t\t\t\t\t * 所以不能直接判断第一个遇到的 // 之前是否有非空白，而只能以换行符为准\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\tif (at2 === Char.Space.LF) { // 遇到换行符之后取整段字符，看是否以 // 开头\r\n\t\t\t\t\t\t\tlet line = code.slice(j + 1, index - 1).trim();\r\n\t\t\t\t\t\t\tif (line.startsWith(CLike.LINE_COMMENT)) {\r\n\t\t\t\t\t\t\t\tindex += 1;\r\n\t\t\t\t\t\t\t\tbreak FOR_ATTRIBUTE;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn --index; // 所有可能性之外\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tappend(output, Span.BRACKET + Char.LEFT_SQUARE_BRACKET + Span.CLOSE);\r\n\tlet word = String.BLANK;\r\n\tfor (; index < len; index++) {\r\n\t\tlet at = code.charAt(index);\r\n\t\tif (at === Char.RIGHT_SQUARE_BRACKET || at === Char.LEFT_PARENTHE || Char.Space.REGX.test(at) || at === Char.POINT) break;\r\n\t\tword += at;\r\n\t}\r\n\r\n\tappend(output, Span.DESCRIPTION + word + Span.CLOSE);\r\n\r\n\treturn --index;\r\n}\r\n\r\nfunction doRegion(code, index, len, output) {\r\n\r\n\tappend(output, Span.DEFINE);\r\n\r\n\tlet word = \"\";\r\n\r\n\tfor (index; index < len; index++) {\r\n\t\tlet at = code.charAt(index);\r\n\t\tif (at === Char.Space.LF) break;\r\n\t\tword += at;\r\n\t}\r\n\r\n\tappend(output, word);\r\n\tappend(output, Span.CLOSE);\r\n\r\n\treturn --index;\r\n}\r\n\r\naddLang([{ name: \"C#\" }], null, {\r\n\tjudgeExe: function (at) {\r\n\t\t// return at === Char.LEFT_SQUARE_BRACKET;\r\n\t\treturn Array.has(JUGDE_PLUGIN_KW, at);\r\n\t},\r\n\tisBuiltInVar: function (word) {\r\n\t\treturn Array.has(dftBuiltInVar, word);\r\n\t},\r\n\texecute: function (code, index, len, output) {\r\n\t\tlet at = code.charAt(index);\r\n\r\n\t\tswitch (at) {\r\n\t\t\tcase Char.LEFT_SQUARE_BRACKET:\r\n\t\t\t\treturn doDescription(code, index, len, output);\r\n\t\t\tcase Char.SHARP:\r\n\t\t\t\treturn doRegion(code, index, len, output);\r\n\t\t\tdefault:\r\n\t\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n}, [\"abstract\", \"as\", \"base\", \"bool\", \"break\", \"byte\", \"case\", \"catch\", \"char\", \"checked\", \"class\", \"const\", \"continue\",\r\n\t\"decimal\", \"default\", \"delegate\", \"do\", \"double\", \"else\", \"enum\", \"event\", \"explicit\", \"extern\",\r\n\t\"false\", \"finally\", \"fixed\", \"float\", \"for\", \"foreach\", \"goto\", \"if\", \"implicit\", \"in\", \"int\", \"interface\", \"internal\", \"is\",\r\n\t\"lock\", \"long\", \"namespace\", \"new\", \"null\", \"object\", \"operator\", \"out\", \"override\",\r\n\t\"params\", \"private\", \"protected\", \"public\", \"readonly\", \"ref\", \"return\",\r\n\t\"sbyte\", \"sealed\", \"short\", \"sizeof\", \"stackalloc\", \"static\", \"string\", \"struct\", \"switch\",\r\n\t\"this\", \"throw\", \"true\", \"try\", \"typeof\",\r\n\t\"uint\", \"ulong\", \"unchecked\", \"unsafe\", \"ushort\", \"using\", \"virtual\", \"void\", \"volatile\", \"while\",\r\n\t\"add\", \"alias\", \"ascending\", \"async\", \"await\", \"descending\", \"dynamic\", \"from\", \"get\", \"global\", \"group\",\r\n\t\"into\", \"join\", \"let\", \"nameof\", \"orderby\", \"partial\", \"remove\", \"select\", \"set\", \"value\", \"var\", \"when\", \"where\", \"yield\"]);\n\n//# sourceURL=webpack://modell-highlighter/./src/langs/cs.js?");

/***/ }),

/***/ "./src/langs/css.js":
/*!**************************!*\
  !*** ./src/langs/css.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\r\n * CSS\r\n */\r\nconst { Char } = JsConst;\r\nconst { Span } = __webpack_require__(/*! ./../constants */ \"./src/constants.js\");\r\nconst { doHtmlEscape, doBlockComment4CLike, doNewLineJoin, append } = __webpack_require__(/*! ./../components */ \"./src/components.js\");\r\nconst { addLang } = __webpack_require__(/*! ./../common */ \"./src/common.js\");\r\n\r\nconst CSS_ID_SPAN = \"<span class=\\\"css_name css_id\\\">\",\r\n\tCSS_CLASS_SPAN = \"<span class=\\\"css_name css_class\\\">\",\r\n\tCSS_AT_SPAN = \"<span class=\\\"css_name css_at\\\">\",\r\n\tCSS_XMLTAG_SPAN = \"<span class=\\\"css_name xmltag\\\">\",\r\n\tCSS_PESUDO_CLASS_SPAN = \"<span class=\\\"css_name css_pesudo_class\\\">\",\r\n\tCSS_FILETYPE = \"@CHARSET\";\r\n\r\n// 这个函数负责进入解析 CSS 名称部分\r\n// 各种不同的名称逻辑交给 doCssCssNames 去实现\r\nfunction doCssName(code, index, len, output) {\r\n\tfor (; index < len; index++) {\r\n\r\n\t\tlet at = code.charAt(index);\r\n\r\n\t\tif (at === Char.TILDE || Char.Space.REGX.test(at)) {\r\n\t\t\tdoHtmlEscape(at, output);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tswitch (at) {\r\n\t\t\tcase Char.POINT:\r\n\t\t\t\tappend(output, CSS_CLASS_SPAN);\r\n\t\t\t\tbreak;\r\n\t\t\tcase Char.SHARP:\r\n\t\t\t\tappend(output, CSS_ID_SPAN);\r\n\t\t\t\tbreak;\r\n\t\t\tcase Char.Bracket.LEFT:\r\n\t\t\tcase Char.Bracket.RIGHT:\r\n\t\t\t\treturn index;\r\n\t\t\tdefault:\r\n\t\t\t\tappend(output, CSS_XMLTAG_SPAN);\r\n\t\t}\r\n\r\n\t\tindex = doCssCssNames(code, index, len, output, at);\r\n\t}\r\n}\r\n\r\nfunction doCssBody(code, index, len, output) {\r\n\r\n\tfor (; index < len; index++) {\r\n\t\tlet at = code.charAt(index);\r\n\t\tif (Char.Space.REGX.test(at)) {\r\n\t\t\tdoHtmlEscape(at, output);\r\n\t\t} else if (at === Char.Bracket.RIGHT) {\r\n\t\t\tappend(output, at);\r\n\t\t\treturn index;\r\n\t\t} else if (at === Char.SLASH && Char.ASTERISK === code.charAt(index + 1)) {\r\n\t\t\tindex = doBlockComment4CLike(code, index, len, output, false);\r\n\t\t} else if (at !== Char.Bracket.LEFT) {\r\n\t\t\tindex = doCssAttr(code, index, len, output);\r\n\t\t\tif (index < len) {\r\n\t\t\t\tindex = cssBody(code, index, len, output);\r\n\t\t\t} else {\r\n\t\t\t\tindex = cssSpace(code, index, len, output);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdoHtmlEscape(at, output);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction doCssAt(code, index, len, output) {\r\n\tappend(output, CSS_AT_SPAN);\r\n\tfor (; index < len; index++) {\r\n\t\tlet at = code.charAt(index);\r\n\t\tif (at === Char.Bracket.LEFT) {\r\n\t\t\tappend(output, Span.CLOSE);\r\n\t\t\tappend(output, Char.Bracket.LEFT);\r\n\r\n\t\t\treturn index;\r\n\t\t} else {\r\n\t\t\tdoHtmlEscape(at, output);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction doCssPesudoClass(code, index, len, output) {\r\n\r\n\tfor (; index < len; index++) {\r\n\t\tlet at = code.charAt(index);\r\n\t\tif (at === Char.COMMA || Char.Space.REGX.test(at)) {\r\n\t\t\tappend(output, Span.CLOSE);\r\n\t\t\tdoHtmlEscape(at, output);\r\n\t\t\treturn index;\r\n\t\t} else if (at === Char.Bracket.LEFT) {\r\n\t\t\tappend(output, Span.CLOSE);\r\n\t\t\treturn --index;\r\n\t\t} else {\r\n\t\t\tdoHtmlEscape(at, output);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// 这个函数是具体负责解析各种名称的\r\nfunction doCssCssNames(code, index, len, output) {\r\n\tfor (; index < len; index++) {\r\n\t\tlet at = code.charAt(index);\r\n\t\tif (at === Char.RIGHT_ANGLE) {\r\n\t\t\tappend(output, Span.CLOSE);\r\n\t\t\tdoHtmlEscape(at, output);\r\n\t\t\tif (code.charAt(index + 1) === Char.COLON) {\r\n\t\t\t\tappend(output, CSS_PESUDO_CLASS_SPAN);\r\n\t\t\t\tindex = doCssPesudoClass(code, ++index, len, output);\r\n\t\t\t} else {\r\n\t\t\t\treturn index;\r\n\t\t\t}\r\n\t\t} else if (at === Char.COMMA || Char.Space.REGX.test(at)) {\r\n\t\t\tappend(output, Span.CLOSE);\r\n\t\t\tdoHtmlEscape(at, output);\r\n\t\t\treturn index;\r\n\t\t} else if (at === Char.Bracket.LEFT) {\r\n\t\t\tappend(output, Span.CLOSE);\r\n\t\t\treturn --index;\r\n\t\t} else {\r\n\t\t\tdoHtmlEscape(at, output);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction cssBody(code, index, len, output) {\r\n\r\n\tindex = cssSpace(code, index, len, output);\r\n\r\n\tappend(output, Span.DATA_VAL);\r\n\tfor (; index < len; index++) {\r\n\t\tlet at = code.charAt(index);\r\n\t\tif (at === Char.SEMICOLON) {\r\n\t\t\tappend(output, Span.CLOSE);\r\n\t\t\tappend(output, at);\r\n\t\t\treturn index;\r\n\t\t} else if (at === Char.Bracket.RIGHT) {\r\n\t\t\t// 后括号判断为退出 CSS 身体部，身体部的所有逻辑到此结束\r\n\t\t\tappend(output, Span.CLOSE);\r\n\t\t\treturn --index;\r\n\t\t}\r\n\t\tif (at === Char.Space.LF) {\r\n\t\t\tdoNewLineJoin(output, Span.DATA_VAL);\r\n\t\t} else {\r\n\t\t\tdoHtmlEscape(at, output);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction cssSpace(code, index, len, output) {\r\n\r\n\tfor (; index < len; index++) {\r\n\t\tlet at = code.charAt(index);\r\n\t\tif (at === Char.SLASH && Char.ASTERISK === code.charAt(index + 1)) {\r\n\t\t\tindex = doBlockComment4CLike(code, index, len, output, false);\r\n\t\t} else if (at === Char.COMMA || Char.Space.REGX.test(at)) {\r\n\t\t\tdoHtmlEscape(at, output);\r\n\t\t} else {\r\n\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction doCssAttr(code, index, len, output) {\r\n\r\n\tappend(output, Span.DATA_KEY);\r\n\tfor (; index < len; index++) {\r\n\t\tlet at = code.charAt(index);\r\n\t\tif (at === Char.COLON || at === Char.Bracket.RIGHT) {\r\n\t\t\tappend(output, Span.CLOSE);\r\n\t\t\tappend(output, at);\r\n\t\t\treturn ++index;\r\n\t\t}\r\n\t\tif (at === Char.Space.LF) {\r\n\t\t\tdoNewLineJoin(output, Span.DATA_KEY);\r\n\t\t} else {\r\n\t\t\tdoHtmlEscape(at, output);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction doCSS(code) {\r\n\r\n\tlet len = code.length,\r\n\t\tindex = 0,\r\n\t\toutput = [];\r\n\tlet at = code.charAt(index);\r\n\t// CSS 文档以 @charset 开头\r\n\tif (String.startsWith(String.trim(code).toUpperCase(), CSS_FILETYPE)) {\r\n\t\tfor (; index < len; index++) {\r\n\t\t\tat = code.charAt(index);\r\n\t\t\tif (at === Char.AT) {\r\n\t\t\t\tappend(output, Span.FILETYPE);\r\n\t\t\t}\r\n\t\t\tappend(output, at);\r\n\t\t\tif (at === Char.SEMICOLON) {\r\n\t\t\t\tappend(output, Span.CLOSE);\r\n\t\t\t\tindex++;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfor (; index < len; index++) {\r\n\t\tat = code.charAt(index);\r\n\t\tif (at === Char.AT) {\r\n\t\t\tindex = doCssAt(code, index, len, output);\r\n\t\t} else if (at === Char.SLASH) {\r\n\t\t\tindex = doBlockComment4CLike(code, index, len, output);\r\n\t\t} else if (at === Char.COMMA || Char.Space.REGX.test(at)) {\r\n\t\t\tdoHtmlEscape(at, output);\r\n\t\t} else {\r\n\t\t\tindex = doCssName(code, index, len, output);\r\n\t\t\tindex = doCssBody(code, index, len, output);\r\n\t\t}\r\n\t}\r\n\r\n\treturn output.join(String.BLANK);\r\n\r\n}\r\n\r\naddLang([{ name: \"CSS\" }], doCSS);\n\n//# sourceURL=webpack://modell-highlighter/./src/langs/css.js?");

/***/ }),

/***/ "./src/langs/html_xml.js":
/*!*******************************!*\
  !*** ./src/langs/html_xml.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\r\n * HTML、XML\r\n */\r\nconst { XmlEntity, Char } = JsConst;\r\nconst { Span } = __webpack_require__(/*! ../constants */ \"./src/constants.js\");\r\nconst { doHtmlEscape, doNewLineJoin, append } = __webpack_require__(/*! ./../components */ \"./src/components.js\");\r\nconst common = __webpack_require__(/*! ./../common */ \"./src/common.js\");\r\n\r\nconst _doCSS = common.getLang(\"CSS\"), _doJS = common.getLang(\"JAVASCRIPT\");\r\n\r\n// HTML 专用\r\nconst COMMENT_TAG_REGX = /<(script|style)([^>]*)>([\\s\\t\\n]*)<\\!\\-\\-([\\s\\S\\n]*?)\\-\\->([\\s\\t\\n]*)<\\/(script|style)>/i,\r\n\tSCRIPT_STYLE_TAG_REGX = /<(script|style)([^>]*)>([\\s\\S\\n]*?)<\\/(script|style)>/i,\r\n\tXML_DOCTYPE_REGX = /<\\!(DOCTYPE)([\\s\\S\\n]*?)>/i;\r\n\r\n// XML 和 HTML 通用\r\nconst XML_TAG_REGX = /<([^>]*?)>/i,\r\n\tXML_END_TAG_REGX = /<\\/([^>]*?)>/i,\r\n\tXML_PROCESSING_REGX = /<\\?([\\s\\S\\n]*)\\?>/,\r\n\tXML_COMMENT_REGX = /\\<\\!\\-\\-([\\s\\S\\n]*?)\\-\\-\\>/i,\r\n\t// XML_ATTR_REGX = /(.+)\\=(.+)/,\r\n\tXML_CDATA_REGX = /<\\!\\[CDATA\\[([\\s\\S\\n]*)\\]\\]>/;\r\n\r\nconst XML_REPLACE_PART = \"{{XML_Replace_Part:\",\r\n\tHTML_REPLACE_PART = \"{{HTML_Replace_Part:\",\r\n\tREPLACE_END = \":}}\";\r\n\r\n// XML 标签转义之后的实体\r\nconst XML_COMMENT_START_ENTITY = \"&lt!--\",\r\n\tXML_COMMENT_END_ENTITY = \"--&gt;\",\r\n\tXML_CDATA_START = \"&lt![CDATA[\",\r\n\tXML_CDATA_END = \"]]&gt;\",\r\n\tXML_PROCESSING_START = \"&lt?\",\r\n\tXML_PROCESSING_END = \"?&gt;\",\r\n\t// XML 注释\r\n\tXML_COMMENT_START = \"<!--\",\r\n\tXML_COMMENT_END = \"-->\";\r\n\r\nconst XML_EMPTY_ATTR_REGX = new RegExp(Span.DATA_KEY + Span.CLOSE, \"g\"),\r\n\tXML_EMPTY_VAL_REGX = new RegExp(Span.DATA_VAL + Span.CLOSE, \"g\");\r\n\r\nconst XML_CDATA_SPAN = \"<span class=\\\"xml_cdata\\\">\",\r\n\tXML_DOCTYPE_SPAN = \"<span class=\\\"xml_doctype\\\">\";\r\n\r\nfunction doXmlCData(code) {\r\n\r\n\tlet output = [];\r\n\r\n\tappend(output, XML_CDATA_SPAN);\r\n\tappend(output, XML_CDATA_START);\r\n\tappend(output, Span.CLOSE);\r\n\r\n\tfor (let i = 0, len = code.length; i < len; i++) {\r\n\t\tdoHtmlEscape(code.charAt(i), output);\r\n\t}\r\n\r\n\tappend(output, XML_CDATA_SPAN);\r\n\tappend(output, XML_CDATA_END);\r\n\tappend(output, Span.CLOSE);\r\n\r\n\treturn output.join(String.BLANK);\r\n}\r\n\r\nfunction doXmlComment(code) {\r\n\tlet output = [];\r\n\tappend(output, Span.COMMENT);\r\n\tappend(output, XML_COMMENT_START_ENTITY);\r\n\r\n\tfor (let i = 0, len = code.length; i < len; i++) {\r\n\t\tlet at = code.charAt(i);\r\n\t\tif (at === Char.Space.LF) {\r\n\t\t\tdoNewLineJoin(output, Span.COMMENT);\r\n\t\t} else {\r\n\t\t\tdoHtmlEscape(at, output);\r\n\t\t}\r\n\t}\r\n\r\n\tappend(output, XML_COMMENT_END_ENTITY);\r\n\tappend(output, Span.CLOSE);\r\n\r\n\treturn output.join(String.BLANK);\r\n}\r\n\r\nfunction doXmlAttibute(input) {\r\n\r\n\tlet output = [];\r\n\r\n\tlet isInName = true, isInVal = false;\r\n\r\n\tfor (let i = 0, len = input.length; i < len; i++) {\r\n\t\tlet at = input.charAt(i);\r\n\t\tif (Char.Space.REGX.test(at) && isInName) {\r\n\t\t\tif (i > 0) {\r\n\t\t\t\tappend(output, Span.CLOSE);\r\n\t\t\t}\r\n\t\t\tdoHtmlEscape(at, output);\r\n\t\t\tif (i < len) {\r\n\t\t\t\tappend(output, Span.DATA_KEY);\r\n\t\t\t}\r\n\t\t\tisInVal = true;\r\n\t\t\tisInName = false;\r\n\t\t} else if ((at === Char.EQUALS) && isInVal) {\r\n\t\t\tappend(output, Span.CLOSE);\r\n\t\t\tdoHtmlEscape(at, output);\r\n\t\t\tappend(output, Span.DATA_VAL);\r\n\t\t\tisInName = true;\r\n\t\t\tisInVal = false;\r\n\t\t} else {\r\n\t\t\tif (at === Char.DQUOTE) {\r\n\t\t\t\tisInName = !isInName;\r\n\t\t\t\tisInVal = !isInVal;\r\n\t\t\t}\r\n\t\t\tdoHtmlEscape(at, output);\r\n\t\t}\r\n\t}\r\n\r\n\tappend(output, Span.CLOSE);\r\n\r\n\toutput = output.join(String.BLANK);\r\n\toutput = output.replace(XML_EMPTY_ATTR_REGX, String.BLANK);\r\n\toutput = output.replace(XML_EMPTY_VAL_REGX, String.BLANK);\r\n\r\n\treturn output;\r\n}\r\n\r\n// 通用于标签属性（包括普通 标签和声明标签）\r\nfunction doXmlCommons(commonSpan, startVal, endVal, input) {\r\n\r\n\tlet tmp = input.split(Char.Space.REGX);\r\n\t/*\r\n\t * <xxx .... /> => [xxx, .., .., .., /] => true\r\n\t * <xxx ..../> => [xxx, .., .., ../] => true\r\n\t * <xxx ....> => [xxx, .., .., ..] => false\r\n\t * <xxx /> => [xxx, /] => true\r\n\t * <xxx/> => [xxx/] => false\r\n\t */\r\n\tlet withSlash = String.endsWith(input, Char.SLASH) && !String.endsWith(tmp[0], Char.SLASH);\r\n\r\n\tlet output = [];\r\n\tappend(output, commonSpan);\r\n\tappend(output, startVal);\r\n\tappend(output, tmp[0]);\r\n\tappend(output, Span.CLOSE);\r\n\r\n\tif (tmp.length > 1) {\r\n\t\tlet end = input.length;\r\n\t\tif (withSlash) end -= 1;\r\n\t\tinput = input.slice(tmp[0].length, end);\r\n\t\tappend(output, doXmlAttibute(input));\r\n\t}\r\n\r\n\tappend(output, commonSpan);\r\n\tif (withSlash) {\r\n\t\tappend(output, Char.SLASH);\r\n\t}\r\n\tappend(output, endVal);\r\n\tappend(output, Span.CLOSE);\r\n\r\n\treturn output.join(String.BLANK);\r\n}\r\n\r\nfunction doXml(input) {\r\n\r\n\tlet xmlReplaceList = [];\r\n\r\n\t// 处理 <!DOCTYPE ...>\r\n\tif (XML_DOCTYPE_REGX.test(input)) {\r\n\t\tinput = input.replace(XML_DOCTYPE_REGX, XML_REPLACE_PART + xmlReplaceList.length + REPLACE_END);\r\n\t\tlet output = XML_DOCTYPE_SPAN + XmlEntity.LEFT_ANGLE + Char.EXCALMATORY + RegExp.$1 + RegExp.$2 +\r\n\t\t\tXmlEntity.RIGHT_ANGLE + Span.CLOSE;\r\n\t\txmlReplaceList.push(output);\r\n\t}\r\n\r\n\t// 处理 <!-- ... -->\r\n\twhile (XML_COMMENT_REGX.test(input)) {\r\n\t\tlet output = doXmlComment(RegExp.$1);\r\n\r\n\t\tinput = input.replace(XML_COMMENT_REGX, XML_REPLACE_PART + xmlReplaceList.length + REPLACE_END);\r\n\t\txmlReplaceList.push(output);\r\n\t}\r\n\r\n\t// 处理 <?xxx ... ?>\r\n\twhile (XML_PROCESSING_REGX.test(input)) {\r\n\t\tlet output = doXmlCommons(Span.XMLTAG, XML_PROCESSING_START, XML_PROCESSING_END, RegExp.$1);\r\n\r\n\t\tinput = input.replace(XML_PROCESSING_REGX, XML_REPLACE_PART + xmlReplaceList.length + REPLACE_END);\r\n\t\txmlReplaceList.push(output);\r\n\t}\r\n\r\n\t// 处理 CDATA\r\n\twhile (XML_CDATA_REGX.test(input)) {\r\n\t\tlet output = doXmlCData(RegExp.$1);\r\n\r\n\t\tinput = input.replace(XML_CDATA_REGX, XML_REPLACE_PART + xmlReplaceList.length + REPLACE_END);\r\n\t\txmlReplaceList.push(output);\r\n\t}\r\n\r\n\t// 处理</xxx>\r\n\twhile (XML_END_TAG_REGX.test(input)) {\r\n\t\tlet output = Span.XMLTAG + XmlEntity.LEFT_ANGLE + Char.SLASH + RegExp.$1 + XmlEntity.RIGHT_ANGLE + Span.CLOSE;\r\n\r\n\t\tinput = input.replace(XML_END_TAG_REGX, XML_REPLACE_PART + xmlReplaceList.length + REPLACE_END);\r\n\t\txmlReplaceList.push(output);\r\n\t}\r\n\r\n\t// 处理 <xxx ... > / <xxx ... />\r\n\twhile (XML_TAG_REGX.test(input)) {\r\n\t\tlet output = doXmlCommons(Span.XMLTAG, XmlEntity.LEFT_ANGLE, XmlEntity.RIGHT_ANGLE, RegExp.$1);\r\n\r\n\t\tinput = input.replace(XML_TAG_REGX, XML_REPLACE_PART + xmlReplaceList.length + REPLACE_END);\r\n\t\txmlReplaceList.push(output);\r\n\t}\r\n\r\n\tlet output = [];\r\n\tfor (let i = 0, len = input.length; i < len; i++) {\r\n\t\tdoHtmlEscape(input.charAt(i), output);\r\n\t}\r\n\r\n\tinput = output.join(String.BLANK);\r\n\r\n\t// 回替\r\n\tArray.forEach(xmlReplaceList, function (i, e) {\r\n\t\tinput = input.replace(XML_REPLACE_PART + i + REPLACE_END, e);\r\n\t});\r\n\r\n\treturn input;\r\n}\r\n\r\ncommon.addLang([{ name: \"XML\" }], doXml);\r\n\r\n/////////////// 下面的部分是专门用于 HTML 的 ///////////////\r\n\r\nfunction doScriptOrStyle(tag, content) {\r\n\r\n\tlet output = [];\r\n\tlet trimed = String.trim(content);\r\n\tlet starts = 0,\r\n\t\tends = content.length;\r\n\r\n\tif (String.endsWith(trimed, XML_COMMENT_END)) {\r\n\t\tends = content.lastIndexOf(XML_COMMENT_END);\r\n\t}\r\n\r\n\tif (String.startsWith(trimed, XML_COMMENT_START)) {\r\n\t\tstarts = content.indexOf(XML_COMMENT_START);\r\n\r\n\t\tlet spaces = content.slice(0, starts);\r\n\r\n\t\tfor (let i = 0, len = spaces.length; i < len; i++) {\r\n\t\t\tdoHtmlEscape(spaces.charAt(i), output);\r\n\t\t}\r\n\r\n\t\tappend(output, Span.COMMENT);\r\n\t\tappend(output, XML_COMMENT_START_ENTITY);\r\n\t\tappend(output, Span.CLOSE);\r\n\r\n\t\tstarts += 4;\r\n\t}\r\n\r\n\tlet tmp = content.slice(starts, ends);\r\n\r\n\tswitch (tag) {\r\n\t\tcase \"SCRIPT\":\r\n\t\t\tappend(output, _doJS.execute(tmp));\r\n\t\t\tbreak;\r\n\t\tcase \"STYLE\":\r\n\t\t\tappend(output, _doCSS.execute(tmp));\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tif (String.endsWith(trimed, XML_COMMENT_END)) {\r\n\t\tlet spaces = content.slice(ends + 3);\r\n\t\tappend(output, Span.COMMENT);\r\n\t\tappend(output, XML_COMMENT_END_ENTITY);\r\n\t\tappend(output, Span.CLOSE);\r\n\t\tfor (let i = 0, len = spaces.length; i < len; i++) {\r\n\t\t\tdoHtmlEscape(spaces.charAt(i), output);\r\n\t\t}\r\n\t}\r\n\r\n\treturn output.join(String.BLANK);\r\n}\r\n\r\nfunction doHTML(input) {\r\n\r\n\tlet htmlReplaceList = [];\r\n\r\n\t// 处理 <script ...><!-- ... --></script> / <style ...><!-- ... --></style>\r\n\twhile (COMMENT_TAG_REGX.test(input)) {\r\n\r\n\t\tlet tag = RegExp.$1.toUpperCase();\r\n\t\tlet beforeTag = RegExp.$1 + RegExp.$2, // 前标签 ...\r\n\t\t\tbeforeSpace = RegExp.$3; // > 和 <!-- 之间的标准空白\r\n\t\tlet content = RegExp.$4; // 正文\r\n\t\tlet afterSpace = RegExp.$5, // --> 和 < 之间的标准空白\r\n\t\t\tafterTag = RegExp.$6; // 后标签\r\n\r\n\t\tlet before = [],\r\n\t\t\tafter = [];\r\n\t\tfor (let i = 0, len = beforeSpace.length; i < len; i++) {\r\n\t\t\tdoHtmlEscape(beforeSpace.charAt(i), before);\r\n\t\t}\r\n\t\tfor (let i = 0, len = afterSpace.length; i < len; i++) {\r\n\t\t\tdoHtmlEscape(afterSpace.charAt(i), after);\r\n\t\t}\r\n\r\n\t\tlet output = doXmlCommons(Span.XMLTAG, XmlEntity.LEFT_ANGLE, XmlEntity.RIGHT_ANGLE, beforeTag) +\r\n\t\t\tbefore.join(String.BLANK) +\r\n\t\t\tSpan.COMMENT + XML_COMMENT_START_ENTITY + Span.CLOSE +\r\n\t\t\tdoScriptOrStyle(tag, content) +\r\n\t\t\tSpan.COMMENT + XML_COMMENT_END_ENTITY + Span.CLOSE +\r\n\t\t\tafter.join(String.BLANK) +\r\n\t\t\tdoXmlCommons(Span.XMLTAG, XmlEntity.LEFT_ANGLE + Char.SLASH, XmlEntity.RIGHT_ANGLE, afterTag);\r\n\r\n\t\tinput = input.replace(COMMENT_TAG_REGX, HTML_REPLACE_PART + htmlReplaceList.length + REPLACE_END);\r\n\t\thtmlReplaceList.push(output);\r\n\t}\r\n\r\n\t// 因为存在 <!--<script ...>...</script>-->这种模式，所以先处理注释\r\n\twhile (XML_COMMENT_REGX.test(input)) {\r\n\t\tlet output = doXmlComment(RegExp.$1);\r\n\r\n\t\tinput = input.replace(XML_COMMENT_REGX, HTML_REPLACE_PART + htmlReplaceList.length + REPLACE_END);\r\n\t\thtmlReplaceList.push(output);\r\n\t}\r\n\r\n\t// 处理 <script ...> ... </script> / <style ...> ... </style>\r\n\twhile (SCRIPT_STYLE_TAG_REGX.test(input)) {\r\n\r\n\t\tlet tag = RegExp.$1.toUpperCase();\r\n\t\tlet before = RegExp.$1 + RegExp.$2; // 前标签\r\n\t\tlet content = RegExp.$3; // 正文\r\n\t\tlet after = RegExp.$4; // 后标签\r\n\r\n\t\tlet output = doXmlCommons(Span.XMLTAG, XmlEntity.LEFT_ANGLE, XmlEntity.RIGHT_ANGLE, before) +\r\n\t\t\tdoScriptOrStyle(tag, content) +\r\n\t\t\tdoXmlCommons(Span.XMLTAG, XmlEntity.LEFT_ANGLE + Char.SLASH, XmlEntity.RIGHT_ANGLE, after);\r\n\r\n\t\tinput = input.replace(SCRIPT_STYLE_TAG_REGX, HTML_REPLACE_PART + htmlReplaceList.length + REPLACE_END);\r\n\t\thtmlReplaceList.push(output);\r\n\t}\r\n\r\n\t// 因为注释和XML一致，HTML部分则不处理 <!-- ... -->\r\n\t// 剩下的全当 XML 进行处理\r\n\tinput = doXml(input);\r\n\r\n\t// 回替\r\n\tArray.forEach(htmlReplaceList, function (i, e) {\r\n\t\tinput = input.replace(HTML_REPLACE_PART + i + REPLACE_END, e);\r\n\t});\r\n\r\n\treturn input;\r\n\r\n}\r\n\r\ncommon.addLang([{ name: \"HTML\" }, { name: \"VUE\" }], doHTML);\n\n//# sourceURL=webpack://modell-highlighter/./src/langs/html_xml.js?");

/***/ }),

/***/ "./src/langs/java.js":
/*!***************************!*\
  !*** ./src/langs/java.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\r\n * Java\r\n */\r\nconst { Char } = JsConst;\r\nconst { Span } = __webpack_require__(/*! ../constants */ \"./src/constants.js\");\r\nconst common = __webpack_require__(/*! ../common */ \"./src/common.js\");\r\nconst { canInWord } = __webpack_require__(/*! ../components */ \"./src/components.js\");\r\n\r\nconst AT_INTERFACE = \"@interface\";\r\n\r\nfunction doAnnotation(code, index, len, output) {\r\n\r\n\tlet word = String.BLANK;\r\n\tfor (; index < len; index++) {\r\n\t\tlet at = code.charAt(index);\r\n\t\tif (Char.Space.REGX.test(at) || at === Char.Parenthe.LEFT) break;\r\n\t\tword += at;\r\n\t}\r\n\tif (word === AT_INTERFACE) {\r\n\t\toutput.push(Span.KEYWORD_SPAN + word + Span.CLOSE);\r\n\t} else {\r\n\t\toutput.push(Span.DESCRIPTION + word + Span.CLOSE);\r\n\t}\r\n\r\n\treturn --index;\r\n}\r\n\r\nconst dftBuiltInFunc = [\"main\",\r\n\t\"Boolean\", \"Byte\", \"Character\", \"Double\", \"Float\", \"Integer\", \"Long\", \"Short\", \"Enum\",\r\n\t\"Error\", \"Exception\", \"NoSuchFieldException\", \"NoSuchMethodException\", \"NullPointerException\",\r\n\t\"ClassCastException\", \"ClassNotFoundException\", \"IndexOutOfBoundsException\", \"IllegalAccessException\",\r\n\t\"IllegalArgumentException\", \"Throwable\", \"Class\", \"Object\", \"System\", \"Thread\", \"Runnable\", \"Properties\",\r\n\t\"String\", \"Number\", \"Void\", \"StringBuffer\", \"StringBuilder\", \"Math\", \"Package\", \"Random\",\r\n\t\"Arrays\", \"Calendar\", \"Map\", \"List\", \"Set\", \"Collection\", \"HashMap\", \"HashSet\", \"ArrayList\"\r\n];\r\nconst dftBuiltInVar = [\"T\", \"E\", \"K\", \"V\", \"O\"];\r\n\r\ncommon.addLang([{ name: \"JAVA\" }], null, {\r\n\tjudgeExe: function (at) {\r\n\t\tswitch (at) {\r\n\t\t\tcase Char.AT:\r\n\t\t\t\treturn true;\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n\tisBuiltInFunc: function (word, next) {\r\n\t\treturn Array.has(dftBuiltInFunc, word && !canInWord(next.charCodeAt(0)));\r\n\t},\r\n\tisBuiltInVar: function (word, next) {\r\n\t\treturn Array.has(dftBuiltInVar, word) && !canInWord(next.charCodeAt(0));\r\n\t},\r\n\tdoc: true,\r\n\texecute: function (code, index, len, output) {\r\n\t\tswitch (code.charAt(index)) {\r\n\t\t\tcase Char.AT:\r\n\t\t\t\treturn doAnnotation(code, index, len, output);\r\n\t\t\tdefault:\r\n\t\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n}, [\"private\", \"protected\", \"public\", \"abstract\", \"class\", \"extends\", \"final\", \"implements\", \"interface\",\r\n\t\"native\", \"new\", \"static\", \"strictfp\", \"synchronized\", \"transient\", \"volatile\", \"break\", \"continue\",\r\n\t\"return\", \"do\", \"while\", \"if\", \"else\", \"for\", \"instanceof\", \"switch\", \"case\", \"default\", \"assert\",\r\n\t\"catch\", \"finally\", \"throw\", \"throws\", \"try\", \"import\", \"package\", \"boolean\", \"byte\", \"char\", \"double\",\r\n\t\"float\", \"int\", \"long\", \"short\", \"null\", \"true\", \"false\", \"super\", \"this\", \"void\", \"goto\"\r\n]);\n\n//# sourceURL=webpack://modell-highlighter/./src/langs/java.js?");

/***/ }),

/***/ "./src/langs/js.js":
/*!*************************!*\
  !*** ./src/langs/js.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\r\n * JavaScript\r\n */\r\nconst { Char } = JsConst;\r\nconst { Span, CLike } = __webpack_require__(/*! ./../constants */ \"./src/constants.js\");\r\nconst common = __webpack_require__(/*! ./../common */ \"./src/common.js\");\r\nconst { defaultDoChars } = __webpack_require__(/*! ./../components */ \"./src/components.js\");\r\n\r\nconst dftBuiltInFunc = [\"eval\", \"alert\", \"Object\", \"String\", \"Date\", \"Number\", \"Math\", \"RegExp\", \"Function\",\r\n\t\"Error\", \"Boolean\", \"Array\", \"parseInt\", \"parseFloat\", \"isNaN\", \"isFinite\", \"decodeURI\", \"decodeURIComponent\",\r\n\t\"encodeURI\", \"encodeURIComponent\", \"escape\", \"unescape\", \"setTimeout\", \"setInterval\", \"apply\", \"call\", \"callee\"\r\n];\r\nconst dftBuiltInVar = [\"document\", \"window\", \"console\", \"Infinity\", \"NaN\", \"arguments\", \"global\", \"exports\", \"module\", \"import\", \"from\"];\r\n\r\n// json 就是 js ，所以直接引用JS 的实现\r\ncommon.addLang([{ name: \"JAVASCRIPT\" }, { name: \"JSON\" }], null, {\r\n\tdoComment: common.commonDoComment,\r\n\tcharSpan: Span.STRING,\r\n\tjudgeExe: function (at) {\r\n\t\treturn at === Char.GRAVE_ACCENT;\r\n\t},\r\n\texecute: function (code, index, len, output) {\r\n\t\t// js 中的 ` 就是字符串符号，所以直接调用字符串操作\r\n\t\tlet at = code.charAt(index);\r\n\t\tswitch (at) {\r\n\t\t\tcase Char.GRAVE_ACCENT:\r\n\t\t\t\treturn defaultDoChars(code, index, len, output, CLike.ESCAPER, Char.GRAVE_ACCENT, Span.STRING);\r\n\r\n\t\t}\r\n\t},\r\n\tisBuiltInFunc: function (word) {\r\n\t\treturn Array.has(dftBuiltInFunc, word);\r\n\t},\r\n\tisBuiltInVar: function (word) {\r\n\t\treturn Array.has(dftBuiltInVar, word);\r\n\t}\r\n}, [\"break\", \"case\", \"catch\", \"continue\", \"default\", \"delete \", \"do\", \"else\", \"false\", \"finally\", \"for\",\r\n\t\"function\", \"if\", \"in\", \"instanceof\", \"new\", \"null\", \"return\", \"switch\", \"this\", \"throw\", \"true\",\r\n\t\"try\", \"typeof\", \"let\", \"var\", \"while\", \"with\", \"void\", \"undefined\", \"abstract\", \"boolean\",\r\n\t\"class\", \"const\", \"debug\"\r\n\t// \"byte\", \"char\", \"double\", \"enum\", \"extends\", \"final\", \"float\", \"goto\", \"let\",\r\n\t// \"implements\", \"int\", \"interface\", \"long\", \"native\", \"package\", \"private\", \"protected\",\r\n\t// \"public\", \"short\", \"static\", \"super\", \"synchronized\", \"throws\", \"transient\", \"volatile\"\r\n]);\n\n//# sourceURL=webpack://modell-highlighter/./src/langs/js.js?");

/***/ }),

/***/ "./src/langs/php.js":
/*!**************************!*\
  !*** ./src/langs/php.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\r\n * PHP\r\n */\r\nconst { Span } = __webpack_require__(/*! ./../constants */ \"./src/constants.js\");\r\nconst common = __webpack_require__(/*! ./../common */ \"./src/common.js\");\r\n\r\nconst dftBuiltInFunc = [\"eval\", \"echo\", \"print\", \"require\"];\r\n\r\nconst PHP_START = \"<?php\",\r\n\tPHP_END = \"?>\";\r\nconst PHP_START_LEN = PHP_START.length,\r\n\tPHP_END_LEN = PHP_END.length;\r\n\r\nconst html = common.getLang(\"HTML\");\r\n\r\nconst php = common.initLangObject(null, {\r\n\tcharSpan: Span.STRING,\r\n\tisBuiltInFunc: function (word) {\r\n\t\treturn Array.has(dftBuiltInFunc, word);\r\n\t}\r\n},\r\n\t[\"and\", \"or\", \"xor\", \"exception\", \"as\", \"break\", \"case\", \"class\", \"const\", \"continue \", \"declare\",\r\n\t\t\"default\", \"do\", \"else\", \"elseif\", \"enddeclare\", \"endfor\", \"endforeach\", \"endif\", \"endswitch\",\r\n\t\t\"endwhile\", \"extends\", \"for\", \"foreach\", \"function\", \"global\", \"if\", \"include\", \"include_once\", \"new\",\r\n\t\t\"require_once\", \"return\", \"static\", \"switch\", \"use\", \"var\", \"while\", \"final\",\r\n\t\t\"php_user_filter\", \"interface\", \"implements\", \"public\", \"private\", \"protected\", \"abstract\", \"clone\",\r\n\t\t\"try\", \"catch\", \"throw\", \"cfunction\", \"this\", \"__LINE__\", \"__FUNCTION__\", \"__CLASS__\", \"__METHOD__\"]\r\n);\r\n\r\nfunction doPHP(input) {\r\n\r\n\tlet phpStart = input.indexOf(PHP_START);\r\n\r\n\tif (phpStart < 0) {\r\n\t\treturn php.execute(input);\r\n\t}\r\n\r\n\tphpStart += PHP_START_LEN;\r\n\r\n\tlet phpEnd = input.indexOf(PHP_END);\r\n\r\n\tlet output = html.execute(input.slice(0, phpStart)) +\r\n\t\tphp.execute(input.slice(phpStart, phpEnd)) + html.execute(PHP_END) +\r\n\t\tdoPHP(input.slice(phpEnd + PHP_END_LEN));\r\n\r\n\treturn output;\r\n}\r\n\r\ncommon.addLang([{ name: \"PHP\" }], doPHP);\n\n//# sourceURL=webpack://modell-highlighter/./src/langs/php.js?");

/***/ }),

/***/ "./src/langs/sh.js":
/*!*************************!*\
  !*** ./src/langs/sh.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\r\n * Shell\r\n * 测试中\r\n */\r\nconst common = __webpack_require__(/*! ./../common */ \"./src/common.js\");\r\n\r\nconst dftBuiltInVar = [\"cat\", \"chattr\", \"chgrpchmod\", \"chown\", \"cksum\", \"cmpdiff\", \"diffstat\", \"file\", \"findgit\", \"gitview\", \"indent\", \"cutln\", \"less\", \"locate\",\r\n\t\"lsattrmattrib\", \"mc\", \"mdel\", \"mdirmktemp\", \"more\", \"mmove\", \"mreadmren\", \"mtools\", \"mtoolstest\", \"mvod\", \"paste\", \"patch\", \"rcprm\", \"slocate\", \"split\", \"eject\",\r\n\t\"teetmpwatch\", \"touch\", \"umask\", \"whichcp\", \"whereis\", \"mcopy\", \"mshowfatrhmask\", \"scp \", \"awk\", \"readupdatedb\", \"col\", \"colrm\", \"commcsplit\", \"ed\", \"egrep\", \"id\",\r\n\t\"exfgrep\", \"fmt\", \"fold\", \"grepispell\", \"jed\", \"joe\", \"joinlook\", \"mtype\", \"pico\", \"rgrepsed\", \"sort\", \"spell\", \"trexpr\", \"uniq\", \"wc\", \"let \", \"lprm\", \"lpr\", \"w\",\r\n\t\"lpqlpd\", \"bye\", \"ftp\", \"uutouupick\", \"uucp\", \"uucico\", \"tftpncftp\", \"ftpshut\", \"ftpwho\", \"insmodkbdconfig\", \"ftpcount \", \"dirsdu\", \"edquota\", \"mcdmdeltree\", \"wall\",\r\n\t\"mdu\", \"mkdir\", \"mlabelmmd\", \"mrd\", \"mzip\", \"pwdquota\", \"mount\", \"mmount\", \"rmdirrmt\", \"stat\", \"tree\", \"umountls\", \"quotacheck\", \"quotaoff\", \"lndirrepquota\", \"cd\",\r\n\t\"quotaon\", \"badblocks\", \"cfdisk\", \"dde2fsck\", \"ext2ed\", \"fsck\", \"fsck.minixfsconf\", \"fdformat\", \"hdparm\", \"mformatmkbootdisk\", \"mkdosfs\", \"mke2fs\", \"mkfs\", \"df\",\r\n\t\"mkfs.ext2mkfs.msdos\", \"mkinitrd\", \"mkisofs\", \"mkswapmpartition\", \"swapon\", \"symlinks\", \"syncmbadblocks\", \"mkfs.minix\", \"fsck.ext2\", \"fdisklosetup\", \"sfdisk\", \"su\",\r\n\t\"swapoff\", \"apachectl\", \"arpwatch\", \"dipgetty\", \"mingetty\", \"uux\", \"telnetuulog\", \"uustat\", \"ppp-off\", \"netconfignc\", \"httpd\", \"ifconfig\", \"minicommesg\", \"dnsconf\",\r\n\t\"netstatping\", \"pppstats\", \"samba\", \"setserialtalk\", \"traceroute\", \"tty\", \"newaliasesuuname\", \"netconf\", \"write\", \"statserialefax\", \"pppsetup\", \"tcpdump\", \"dump\",\r\n\t\"ytalkcu\", \"smbd\", \"testparm\", \"smbclientshapecfg\", \"adduser\", \"chfn\", \"useradddate\", \"exit\", \"finger\", \"fwhiossleep\", \"suspend\", \"groupdel\", \"groupmodhalt\", \"sudo\",\r\n\t\"kill\", \"last\", \"lastblogin\", \"logname\", \"logout\", \"psnice\", \"procinfo\", \"top\", \"pstreereboot\", \"rlogin\", \"rsh\", \"sliploginscreen\", \"shutdown\", \"rwho\", \"sudogitps\",\r\n\t\"swatch\", \"tload\", \"logrotateuname\", \"chsh\", \"userconf\", \"userdelusermod\", \"vlock\", \"who\", \"whoamiwhois\", \"newgrp\", \"renice\", \"suskill\", \"free\", \"reset\", \"sndconfig\",\r\n\t\"clear\", \"aliasdircolors\", \"aumix\", \"bind\", \"chrootclock\", \"crontab\", \"declare\", \"depmoddmesg\", \"enable\", \"eval\", \"exportpwunconv\", \"grpconv\", \"rpm\", \"apmd\", \"unarj\",\r\n\t\"lilo\", \"liloconfig\", \"lsmodminfo\", \"set\", \"modprobe\", \"ntsysvmouseconfig\", \"passwd\", \"pwconv\", \"rdateresize\", \"rmmod\", \"grpunconv\", \"modinfotime\", \"setup\", \"lha\",\r\n\t\"setenvsetconsole\", \"timeconfig\", \"ulimit\", \"unsetchkconfig\", \"hwclock\", \"mkkickstartfbset\", \"unalias\", \"SVGATextMode\", \"ar\", \"bunzip2\", \"bzip2bzip2recover\", \"gunzip\",\r\n\t\"compresscpio\", \"uuencode\", \"gzexegzip\", \"restore\", \"taruudecode\", \"unzip\", \"zip\", \"zipinfo\", \"setleds\", \"loadkeys\", \"rdevdumpkeys\", \"MAKEDEV\"\r\n];\r\nconst dftBuiltInFunc = [];\r\n\r\n// TODO shell 暂时不加入\r\n// common.addLang([{ name: \"SHELL\" }], null, {\r\n\r\n// }, [\"case\", \"do\", \"done\", \"elif\", \"else\", \"esac\", \"if\", \"for\", \"function\", \"if\", \"in\", \"then\", \"time\", \"until\", \"while\"\r\n// \t\t//,\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"\r\n// \t]);\n\n//# sourceURL=webpack://modell-highlighter/./src/langs/sh.js?");

/***/ }),

/***/ "./src/langs/sql.js":
/*!**************************!*\
  !*** ./src/langs/sql.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\r\n * SQL\r\n */\r\nconst { Char } = JsConst;\r\nconst { Span } = __webpack_require__(/*! ./../constants */ \"./src/constants.js\");\r\nconst { doBlockComment4CLike, doLineComment4CLike, doHtmlEscape, doNewLineJoin, append } = __webpack_require__(/*! ./../components */ \"./src/components.js\");\r\nconst common = __webpack_require__(/*! ./../common */ \"./src/common.js\");\r\n\r\n\r\ncommon.addLang([{ name: \"SQL\" }], null, {\r\n\tdoComment: function (code, index, len, at, output) {\r\n\t\tlet next = code.charAt(index + 1);\r\n\t\tif (at === Char.SLASH && next === Char.ASTERISK) {\r\n\t\t\tindex = doBlockComment4CLike(code, index, len, output);\r\n\t\t} else if (at == Char.HYPHEN && next === Char.HYPHEN) {\r\n\t\t\tindex = doLineComment4CLike(code, index, len, at, output);\r\n\t\t} else {\r\n\t\t\tdoHtmlEscape(at, output);\r\n\t\t}\r\n\t\treturn index;\r\n\t},\r\n\tjudgeComment: function (at) {\r\n\t\treturn at === Char.SLASH || at === Char.HYPHEN;\r\n\t},\r\n\tcharSpan: Span.STRING,\r\n\tdoChar: function (code, index, len, output, escaper, end, span) {\r\n\r\n\t\tappend(output, span + code.charAt(index++));\r\n\t\tlet next = code.charAt(index + 1);\r\n\r\n\t\tfor (; index < len; index++) {\r\n\t\t\tlet at = code.charAt(index);\r\n\r\n\t\t\tif (at === Char.Space.LF) {\r\n\t\t\t\tdoNewLineJoin(output, span);\r\n\t\t\t} else {\r\n\t\t\t\tdoHtmlEscape(at, output);\r\n\t\t\t\tif (at === end) {\r\n\t\t\t\t\tnext = code.charAt(index + 1);\r\n\t\t\t\t\tif (next === end) { // 转义符号\r\n\t\t\t\t\t\tdoHtmlEscape(next, output);\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t} else { // 字符串结束\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tappend(output, Span.CLOSE);\r\n\t\tdoHtmlEscape(next, output);\r\n\r\n\t\treturn index;\r\n\t},\r\n\tescaper: Char.QUOTE,\r\n\tcharCaseMethod: \"toUpperCase\"\r\n}, [\r\n\"ABS\",\"ALL\",\"ALLOCATE\",\"ALTER\",\"AND\",\"ANY\",\"ARE\",\"ARRAY\",\"ARRAY_AGG\",\"ARRAY_MAX_CARDINALITY\",\"AS\",\"ASENSITIVE\",\"ASYMMETRIC\",\"AT\",\"ATOMIC\",\"ATTRIBUTES\",\"AUTHORIZATION\",\"AVG\",\"BEGIN\",\"BEGIN_FRAME\",\"BEGIN_PARTITION\",\"BETWEEN\",\"BIGINT\",\"BINARY\",\"BLOB\",\"BOOLEAN\",\"BOTH\",\"BY\",\"CALL\",\"CALLED\",\"CARDINALITY\",\"CASCADED\",\"CASE\",\"CAST\",\"CEIL\",\"CEILING\",\"CHAR\",\"CHARACTER\",\"CHARACTER_LENGTH\",\"CHAR_LENGTH\",\"CHECK\",\"CLOB\",\"CLOSE\",\"COALESCE\",\"COLLATE\",\"COLLECT\",\"COLUMN\",\"COMMIT\",\"CONDITION\",\"CONNECT\",\"CONSTRAINT\",\"CONTAINS\",\"CONVERT\",\"CORR\",\"CORRESPONDING\",\"COUNT\",\"COVAR_POP\",\"COVAR_SAMP\",\"CREATE\",\"CROSS\",\"CUBE\",\"CUME_DIST\",\"CURRENT\",\"CURRENT_CATALOG\",\"CURRENT_DATE\",\"CURRENT_DEFAULT_TRANSFORM_GROUP\",\"CURRENT_PATH\",\"CURRENT_ROLE\",\"CURRENT_ROW\",\"CURRENT_SCHEMA\",\"CURRENT_TIME\",\"CURRENT_TIMESTAMP\",\"CURRENT_TRANSFORM_GROUP_FOR_TYPE\",\"CURRENT_USER\",\"CURSOR\",\"CYCLE\",\"DATALINK\",\"DATE\",\"DAY\",\"DEALLOCATE\",\"DEC\",\"DECIMAL\",\"DECLARE\",\"DEFAULT\",\"DELETE\",\"DENSE_RANK\",\"DEREF\",\"DESCRIBE\",\"DETERMINISTIC\",\"DISCONNECT\",\"DISTINCT\",\"DLNEWCOPY\",\"DLPREVIOUSCOPY\",\"DLURLCOMPLETE\",\"DLURLCOMPLETEONLY\",\"DLURLCOMPLETEWRITE\",\"DLURLPATH\",\"DLURLPATHONLY\",\"DLURLPATHWRITE\",\"DLURLSCHEME\",\"DLURLSERVER\",\"DLVALUE\",\"DOUBLE\",\"DROP\",\"DYNAMIC\",\"EACH\",\"ELEMENT\",\"ELSE\",\"END\",\"END-EXEC\",\"END_FRAME\",\"END_PARTITION\",\"EQUALS\",\"ESCAPE\",\"EVERY\",\"EXCEPT\",\"EXEC\",\"EXECUTE\",\"EXISTS\",\"EXTERNAL\",\"EXTRACT\",\"FALSE\",\"FETCH\",\"FILTER\",\"FIRST_VALUE\",\"FLOAT\",\"FLOOR\",\"FOR\",\"FOREIGN\",\"FRAME_ROW\",\"FREE\",\"FROM\",\"FULL\",\"FUNCTION\",\"FUSION\",\"GET\",\"GLOBAL\",\"GRANT\",\"GROUP\",\"GROUPING\",\"GROUPS\",\"HAVING\",\"HOLD\",\"HOUR\",\"IDENTITY\",\"IMPORT\",\"IN\",\"INDICATOR\",\"INNER\",\"INOUT\",\"INSENSITIVE\",\"INSERT\",\"INT\",\"INTEGER\",\"INTERSECT\",\"INTERSECTION\",\"INTERVAL\",\"INTO\",\"IS\",\"JOIN\",\"LAG\",\"LANGUAGE\",\"LARGE\",\"LAST_VALUE\",\"LATERAL\",\"LEAD\",\"LEADING\",\"LEFT\",\"LIKE\",\"LIKE_REGEX\",\"LN\",\"LOCAL\",\"LOCALTIME\",\"LOCALTIMESTAMP\",\"LOWER\",\"MATCH\",\"MAX\",\"MEMBER\",\"MERGE\",\"METHOD\",\"MIN\",\"MINUTE\",\"MOD\",\"MODIFIES\",\"MODULE\",\"MONTH\",\"MULTISET\",\"NATIONAL\",\"NATURAL\",\"NCHAR\",\"NCLOB\",\"NEW\",\"NO\",\"NONE\",\"NORMALIZE\",\"NOT\",\"NTH_VALUE\",\"NTILE\",\"NULL\",\"NULLIF\",\"NUMERIC\",\"OCCURRENCES_REGEX\",\"OCTET_LENGTH\",\"OF\",\"OFFSET\",\"OLD\",\"ON\",\"ONLY\",\"OPEN\",\"OR\",\"ORDER\",\"OUT\",\"OUTER\",\"OVER\",\"OVERLAPS\",\"OVERLAY\",\"PARAMETER\",\"PARTITION\",\"PERCENT\",\"PERCENTILE_CONT\",\"PERCENTILE_DISC\",\"PERCENT_RANK\",\"PERIOD\",\"PORTION\",\"POSITION\",\"POSITION_REGEX\",\"POWER\",\"PRECEDES\",\"PRECISION\",\"PREPARE\",\"PRIMARY\",\"PROCEDURE\",\"RANGE\",\"RANK\",\"READS\",\"REAL\",\"RECURSIVE\",\"REF\",\"REFERENCES\",\"REFERENCING\",\"REGR_AVGX\",\"REGR_AVGY\",\"REGR_COUNT\",\"REGR_INTERCEPT\",\"REGR_R2\",\"REGR_SLOPE\",\"REGR_SXX\",\"REGR_SXY\",\"REGR_SYY\",\"RELEASE\",\"RESULT\",\"RETURN\",\"RETURNED_CARDINALITY\",\"RETURNS\",\"REVOKE\",\"RIGHT\",\"ROLLBACK\",\"ROLLUP\",\"ROW\",\"ROWS\",\"ROW_NUMBER\",\"SAVEPOINT\",\"SCOPE\",\"SCROLL\",\"SEARCH\",\"SECOND\",\"SELECT\",\"SENSITIVE\",\"SESSION_USER\",\"SET\",\"SIMILAR\",\"SMALLINT\",\"SOME\",\"SPECIFIC\",\"SPECIFICTYPE\",\"SQL\",\"SQLEXCEPTION\",\"SQLSTATE\",\"SQLWARNING\",\"SQRT\",\"START\",\"STATIC\",\"STDDEV_POP\",\"STDDEV_SAMP\",\"SUBMULTISET\",\"SUBSTRING\",\"SUBSTRING_REGEX\",\"SUCCEEDS\",\"SUM\",\"SYMMETRIC\",\"SYSTEM\",\"SYSTEM_TIME\",\"SYSTEM_USER\",\"TABLE\",\"TABLESAMPLE\",\"THEN\",\"TIME\",\"TIMESTAMP\",\"TIMEZONE_HOUR\",\"TIMEZONE_MINUTE\",\"TO\",\"TRAILING\",\"TRANSLATE\",\"TRANSLATE_REGEX\",\"TRANSLATION\",\"TREAT\",\"TRIGGER\",\"TRIM\",\"TRIM_ARRAY\",\"TRUE\",\"TRUNCATE\",\"UESCAPE\",\"UNION\",\"UNIQUE\",\"UNKNOWN\",\"UNNEST\",\"UPDATE\",\"UPPER\",\"USER\",\"USING\",\"VALUE\",\"VALUES\",\"VALUE_OF\",\"VARBINARY\",\"VARCHAR\",\"VARYING\",\"VAR_POP\",\"VAR_SAMP\",\"VERSIONING\",\"WHEN\",\"WHENEVER\",\"WHERE\",\"WIDTH_BUCKET\",\"WINDOW\",\"WITH\",\"WITHIN\",\"WITHOUT\",\"XML\",\"XMLAGG\",\"XMLATTRIBUTES\",\"XMLBINARY\",\"XMLCAST\",\"XMLCOMMENT\",\"XMLCONCAT\",\"XMLDOCUMENT\",\"XMLELEMENT\",\"XMLEXISTS\",\"XMLFOREST\",\"XMLITERATE\",\"XMLNAMESPACES\",\"XMLPARSE\",\"XMLPI\",\"XMLQUERY\",\"XMLSERIALIZE\",\"XMLTABLE\",\"XMLTEXT\",\"XMLVALIDATE\",\"YEAR\"\r\n]);\n\n//# sourceURL=webpack://modell-highlighter/./src/langs/sql.js?");

/***/ }),

/***/ "./src/langs/vb.js":
/*!*************************!*\
  !*** ./src/langs/vb.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\r\n * VB、VB.NET、VBA\r\n */\r\nconst { Char } = JsConst;\r\nconst { doLineComment4CLike, canInWord } = __webpack_require__(/*! ./../components */ \"./src/components.js\");\r\nconst { addLang } = __webpack_require__(/*! ./../common */ \"./src/common.js\");\r\n\r\nconst dftBuiltInFunc = [\"CDate\", \"Date\", \"DateAdd\", \"DateDiff\", \"DatePart\", \"DateSerial\", \"DateValue\", \"Day\",\r\n\t\"FormatDateTime\", \"Hour\", \"IsDate\", \"Minute\", \"Month\", \"MonthName\", \"Now\", \"Second\", \"Time\", \"Timer\",\r\n\t\"TimeSerial\", \"TimeValue\", \"Weekday\", \"WeekdayName\", \"Year\", \"Asc\", \"CBool\", \"CByte\", \"CCur\", \"CDate\",\r\n\t\"CDbl\", \"Chr\", \"CInt\", \"CLng\", \"CSng\", \"CStr\", \"Hex\", \"Oct\", \"FormatCurrency\", \"FormatDateTime\", \"Sgn\",\r\n\t\"FormatNumber\", \"FormatPercent\", \"Abs\", \"Atn\", \"Cos\", \"Exp\", \"Hex\", \"Int\", \"Fix\", \"Log\", \"Oct\", \"Rnd\",\r\n\t\"Sin\", \"Sqr\", \"Tan\", \"Array\", \"Filter\", \"IsArray\", \"Join\", \"LBound\", \"Split\", \"UBound\", \"InStr\", \"InStrRev\",\r\n\t\"LCase\", \"Left\", \"Len\", \"LTrim\", \"RTrim\", \"Trim\", \"Mid\", \"Replace\", \"Right\", \"Space\", \"StrComp\", \"String\",\r\n\t\"StrReverse\", \"UCase\", \"CreateObject\", \"Eval\", \"GetLocale\", \"GetObject\", \"GetRef\", \"InputBox\", \"IsEmpty\",\r\n\t\"IsNull\", \"IsNumeric\", \"IsObject\", \"LoadPicture\", \"MsgBox\", \"RGB\", \"Round\", \"ScriptEngine\", \"VarType\",\r\n\t\"ScriptEngineBuildVersion\", \"ScriptEngineMajorVersion\", \"ScriptEngineMinorVersion\", \"SetLocale\", \"TypeName\"\r\n];\r\n\r\nconst plugIn = {\r\n\tjudgeComment: function (at) {\r\n\t\treturn at === Char.QUOTE;\r\n\t},\r\n\tisBuiltInFunc: function (word) {\r\n\r\n\t\tlet result = false;\r\n\t\t\r\n\t\tfor (let funName of dftBuiltInFunc) {\r\n\t\t\tif (String.equalsIgnoreCase(word, funName)) {\r\n\t\t\t\tresult = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t},\r\n\tdoComment: doLineComment4CLike,\r\n\tescaper: Char.DQUOTE,\r\n\tdoKeyword: function (kws, word, next) {\r\n\r\n\t\tlet result = false;\r\n\r\n\t\tfor (let kw of kws) {\r\n\t\t\tif (String.equalsIgnoreCase(word, kw)) {\r\n\t\t\t\tresult = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result && !canInWord(next);\r\n\t}\r\n};\r\n\r\naddLang([{ name: \"VB\" }, { name: \"VBA\" }, { name: \"VBSCRIPT\" }], null, plugIn,\r\n\t[\"AddHandler\", \"AddressOf\", \"Alias\", \"And\", \"AndAlso\", \"Ansi\", \"As\", \"Assembly\", \"Auto\", \"Boolean\",\r\n\t\t\"ByRef\", \"Byte\", \"ByVal\", \"Call\", \"Case\", \"Catch\", \"CBool\", \"CByte\", \"CChar\", \"CDate\", \"CDec\", \"CDbl\",\r\n\t\t\"Char\", \"CInt\", \"Class\", \"CLng\", \"CObj\", \"Const\", \"CShort\", \"CSng\", \"CStr\", \"CType\", \"Date\", \"Decimal\",\r\n\t\t\"Declare\", \"Default\", \"Delegate\", \"Dim\", \"DirectCast\", \"Do\", \"Double\", \"Each\", \"Else\", \"ElseIf\", \"End\",\r\n\t\t\"Enum\", \"Erase\", \"Error\", \"Event\", \"Exit\", \"#ExternalSource\", \"False\", \"Finally\", \"For\", \"Friend\",\r\n\t\t\"Function\", \"Get\", \"GetType\", \"GoTo\", \"Handles\", \"If\", \"Implements\", \"Imports\", \"In\", \"Inherits\",\r\n\t\t\"Integer\", \"Interface\", \"Is\", \"Let\", \"Lib\", \"Like\", \"Long\", \"Loop\", \"Me\", \"Mod\", \"Module\",\r\n\t\t\"MustInherit\", \"MustOverride\", \"MyBase\", \"MyClass\", \"Namespace\", \"New\", \"Next\", \"Not\", \"Nothing\",\r\n\t\t\"NotInheritable\", \"NotOverridable\", \"Object\", \"On\", \"Option\", \"Optional\", \"Or\", \"OrElse\", \"Overloads\",\r\n\t\t\"Overridable\", \"Overrides\", \"ParamArray\", \"Preserve\", \"Private\", \"Property\", \"Protected\", \"Public\",\r\n\t\t\"RaiseEvent\", \"ReadOnly\", \"ReDim\", \"#Region\", \"REM\", \"RemoveHandler\", \"Resume\", \"Return\", \"Select\",\r\n\t\t\"Set\", \"Shadows\", \"Shared\", \"Short\", \"Single\", \"Static\", \"Step\", \"Stop\", \"String\", \"Structure\", \"Sub\",\r\n\t\t\"SyncLock\", \"Then\", \"Throw\", \"To\", \"True\", \"Try\", \"TypeOf\", \"Unicode\", \"Until\", \"Variant\", \"When\",\r\n\t\t\"While\", \"With\", \"WithEvents\", \"WriteOnly\", \"Xor\", \"#Const\", \"#ExternalSource\", \"#Region\"\r\n\t]);\r\n\r\n// VB6和VB.NET 应该不一样，但现在看起来似乎一样，原因待查\r\naddLang([{ name: \"VB.NET\" }], null, plugIn\r\n\t/*\r\n\t * 所列的关键字全部来自 MSND （https://msdn.microsoft.com/zh-cn/library/ksh7h19t(v=vs.90).aspx）\r\n\t * 但MSDN 上写的是 Visual Basic 的关键字，而不是 .NET，所以暂时存疑\r\n\t * 单纯VB6 的关键字是什么，也存疑\r\n\t */, [\"AddHandler\", \"AddressOf\", \"Alias\", \"And\", \"AndAlso\", \"Ansi\", \"As\", \"Assembly\", \"Auto\", \"Boolean\",\r\n\t\t\"ByRef\", \"Byte\", \"ByVal\", \"Call\", \"Case\", \"Catch\", \"CBool\", \"CByte\", \"CChar\", \"CDate\", \"CDec\", \"CDbl\",\r\n\t\t\"Char\", \"CInt\", \"Class\", \"CLng\", \"CObj\", \"Const\", \"CShort\", \"CSng\", \"CStr\", \"CType\", \"Date\", \"Decimal\",\r\n\t\t\"Declare\", \"Default\", \"Delegate\", \"Dim\", \"DirectCast\", \"Do\", \"Double\", \"Each\", \"Else\", \"ElseIf\", \"End\",\r\n\t\t\"Enum\", \"Erase\", \"Error\", \"Event\", \"Exit\", \"#ExternalSource\", \"False\", \"Finally\", \"For\", \"Friend\",\r\n\t\t\"Function\", \"Get\", \"GetType\", \"GoTo\", \"Handles\", \"If\", \"Implements\", \"Imports\", \"In\", \"Inherits\",\r\n\t\t\"Integer\", \"Interface\", \"Is\", \"Let\", \"Lib\", \"Like\", \"Long\", \"Loop\", \"Me\", \"Mod\", \"Module\",\r\n\t\t\"MustInherit\", \"MustOverride\", \"MyBase\", \"MyClass\", \"Namespace\", \"New\", \"Next\", \"Not\", \"Nothing\",\r\n\t\t\"NotInheritable\", \"NotOverridable\", \"Object\", \"On\", \"Option\", \"Optional\", \"Or\", \"OrElse\", \"Overloads\",\r\n\t\t\"Overridable\", \"Overrides\", \"ParamArray\", \"Preserve\", \"Private\", \"Property\", \"Protected\", \"Public\",\r\n\t\t\"RaiseEvent\", \"ReadOnly\", \"ReDim\", \"#Region\", \"REM\", \"RemoveHandler\", \"Resume\", \"Return\", \"Select\",\r\n\t\t\"Set\", \"Shadows\", \"Shared\", \"Short\", \"Single\", \"Static\", \"Step\", \"Stop\", \"String\", \"Structure\", \"Sub\",\r\n\t\t\"SyncLock\", \"Then\", \"Throw\", \"To\", \"True\", \"Try\", \"TypeOf\", \"Unicode\", \"Until\", \"Variant\", \"When\",\r\n\t\t\"While\", \"With\", \"WithEvents\", \"WriteOnly\", \"Xor\", \"#Const\", \"#ExternalSource\", \"#Region\"\r\n\t]);\n\n//# sourceURL=webpack://modell-highlighter/./src/langs/vb.js?");

/***/ }),

/***/ "./src/langs sync recursive ^\\.\\/.*$":
/*!**********************************!*\
  !*** ./src/langs/ sync ^\.\/.*$ ***!
  \**********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var map = {\n\t\"./c_cpp\": \"./src/langs/c_cpp.js\",\n\t\"./c_cpp.js\": \"./src/langs/c_cpp.js\",\n\t\"./cs\": \"./src/langs/cs.js\",\n\t\"./cs.js\": \"./src/langs/cs.js\",\n\t\"./css\": \"./src/langs/css.js\",\n\t\"./css.js\": \"./src/langs/css.js\",\n\t\"./html_xml\": \"./src/langs/html_xml.js\",\n\t\"./html_xml.js\": \"./src/langs/html_xml.js\",\n\t\"./java\": \"./src/langs/java.js\",\n\t\"./java.js\": \"./src/langs/java.js\",\n\t\"./js\": \"./src/langs/js.js\",\n\t\"./js.js\": \"./src/langs/js.js\",\n\t\"./php\": \"./src/langs/php.js\",\n\t\"./php.js\": \"./src/langs/php.js\",\n\t\"./sh\": \"./src/langs/sh.js\",\n\t\"./sh.js\": \"./src/langs/sh.js\",\n\t\"./sql\": \"./src/langs/sql.js\",\n\t\"./sql.js\": \"./src/langs/sql.js\",\n\t\"./vb\": \"./src/langs/vb.js\",\n\t\"./vb.js\": \"./src/langs/vb.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src/langs sync recursive ^\\\\.\\\\/.*$\";\n\n//# sourceURL=webpack://modell-highlighter/./src/langs/_sync_^\\.\\/.*$?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;